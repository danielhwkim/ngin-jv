// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: command.proto

package commander;

public final class Command {
  private Command() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code commander.Head}
   */
  public enum Head
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>cmd = 0;</code>
     */
    cmd(0),
    /**
     * <code>stage = 65280;</code>
     */
    stage(65280),
    /**
     * <code>query = 65284;</code>
     */
    query(65284),
    /**
     * <code>object = 65286;</code>
     */
    object(65286),
    /**
     * <code>contact = 61680;</code>
     */
    contact(61680),
    /**
     * <code>event = 61681;</code>
     */
    event(61681),
    /**
     * <code>key = 61682;</code>
     */
    key(61682),
    /**
     * <code>ack = 61683;</code>
     */
    ack(61683),
    /**
     * <code>directional = 61684;</code>
     */
    directional(61684),
    /**
     * <code>button = 61685;</code>
     */
    button(61685),
    /**
     * <code>tap = 61686;</code>
     */
    tap(61686),
    /**
     * <code>queryresult = 61687;</code>
     */
    queryresult(61687),
    /**
     * <code>error = 61688;</code>
     */
    error(61688),
    /**
     * <code>relay = 61689;</code>
     */
    relay(61689),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>cmd = 0;</code>
     */
    public static final int cmd_VALUE = 0;
    /**
     * <code>stage = 65280;</code>
     */
    public static final int stage_VALUE = 65280;
    /**
     * <code>query = 65284;</code>
     */
    public static final int query_VALUE = 65284;
    /**
     * <code>object = 65286;</code>
     */
    public static final int object_VALUE = 65286;
    /**
     * <code>contact = 61680;</code>
     */
    public static final int contact_VALUE = 61680;
    /**
     * <code>event = 61681;</code>
     */
    public static final int event_VALUE = 61681;
    /**
     * <code>key = 61682;</code>
     */
    public static final int key_VALUE = 61682;
    /**
     * <code>ack = 61683;</code>
     */
    public static final int ack_VALUE = 61683;
    /**
     * <code>directional = 61684;</code>
     */
    public static final int directional_VALUE = 61684;
    /**
     * <code>button = 61685;</code>
     */
    public static final int button_VALUE = 61685;
    /**
     * <code>tap = 61686;</code>
     */
    public static final int tap_VALUE = 61686;
    /**
     * <code>queryresult = 61687;</code>
     */
    public static final int queryresult_VALUE = 61687;
    /**
     * <code>error = 61688;</code>
     */
    public static final int error_VALUE = 61688;
    /**
     * <code>relay = 61689;</code>
     */
    public static final int relay_VALUE = 61689;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Head valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Head forNumber(int value) {
      switch (value) {
        case 0: return cmd;
        case 65280: return stage;
        case 65284: return query;
        case 65286: return object;
        case 61680: return contact;
        case 61681: return event;
        case 61682: return key;
        case 61683: return ack;
        case 61684: return directional;
        case 61685: return button;
        case 61686: return tap;
        case 61687: return queryresult;
        case 61688: return error;
        case 61689: return relay;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Head>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Head> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Head>() {
            public Head findValueByNumber(int number) {
              return Head.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return commander.Command.getDescriptor().getEnumTypes().get(0);
    }

    private static final Head[] VALUES = values();

    public static Head valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Head(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:commander.Head)
  }

  /**
   * Protobuf enum {@code commander.BodyShape}
   */
  public enum BodyShape
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>rectangle = 0;</code>
     */
    rectangle(0),
    /**
     * <code>actor = 1;</code>
     */
    actor(1),
    /**
     * <code>circle = 2;</code>
     */
    circle(2),
    /**
     * <code>triangle = 3;</code>
     */
    triangle(3),
    /**
     * <code>edge = 4;</code>
     */
    edge(4),
    /**
     * <code>polygon = 5;</code>
     */
    polygon(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>rectangle = 0;</code>
     */
    public static final int rectangle_VALUE = 0;
    /**
     * <code>actor = 1;</code>
     */
    public static final int actor_VALUE = 1;
    /**
     * <code>circle = 2;</code>
     */
    public static final int circle_VALUE = 2;
    /**
     * <code>triangle = 3;</code>
     */
    public static final int triangle_VALUE = 3;
    /**
     * <code>edge = 4;</code>
     */
    public static final int edge_VALUE = 4;
    /**
     * <code>polygon = 5;</code>
     */
    public static final int polygon_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static BodyShape valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static BodyShape forNumber(int value) {
      switch (value) {
        case 0: return rectangle;
        case 1: return actor;
        case 2: return circle;
        case 3: return triangle;
        case 4: return edge;
        case 5: return polygon;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BodyShape>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        BodyShape> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BodyShape>() {
            public BodyShape findValueByNumber(int number) {
              return BodyShape.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return commander.Command.getDescriptor().getEnumTypes().get(1);
    }

    private static final BodyShape[] VALUES = values();

    public static BodyShape valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private BodyShape(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:commander.BodyShape)
  }

  /**
   * Protobuf enum {@code commander.BodyType}
   */
  public enum BodyType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>staticBody = 0;</code>
     */
    staticBody(0),
    /**
     * <code>kinematicBody = 1;</code>
     */
    kinematicBody(1),
    /**
     * <code>dynamicBody = 2;</code>
     */
    dynamicBody(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>staticBody = 0;</code>
     */
    public static final int staticBody_VALUE = 0;
    /**
     * <code>kinematicBody = 1;</code>
     */
    public static final int kinematicBody_VALUE = 1;
    /**
     * <code>dynamicBody = 2;</code>
     */
    public static final int dynamicBody_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static BodyType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static BodyType forNumber(int value) {
      switch (value) {
        case 0: return staticBody;
        case 1: return kinematicBody;
        case 2: return dynamicBody;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BodyType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        BodyType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BodyType>() {
            public BodyType findValueByNumber(int number) {
              return BodyType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return commander.Command.getDescriptor().getEnumTypes().get(2);
    }

    private static final BodyType[] VALUES = values();

    public static BodyType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private BodyType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:commander.BodyType)
  }

  /**
   * Protobuf enum {@code commander.JoystickMoveDirectional}
   */
  public enum JoystickMoveDirectional
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MOVE_UP = 0;</code>
     */
    MOVE_UP(0),
    /**
     * <code>MOVE_UP_LEFT = 1;</code>
     */
    MOVE_UP_LEFT(1),
    /**
     * <code>MOVE_UP_RIGHT = 2;</code>
     */
    MOVE_UP_RIGHT(2),
    /**
     * <code>MOVE_RIGHT = 3;</code>
     */
    MOVE_RIGHT(3),
    /**
     * <code>MOVE_DOWN = 4;</code>
     */
    MOVE_DOWN(4),
    /**
     * <code>MOVE_DOWN_RIGHT = 5;</code>
     */
    MOVE_DOWN_RIGHT(5),
    /**
     * <code>MOVE_DOWN_LEFT = 6;</code>
     */
    MOVE_DOWN_LEFT(6),
    /**
     * <code>MOVE_LEFT = 7;</code>
     */
    MOVE_LEFT(7),
    /**
     * <code>IDLE = 8;</code>
     */
    IDLE(8),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>MOVE_UP = 0;</code>
     */
    public static final int MOVE_UP_VALUE = 0;
    /**
     * <code>MOVE_UP_LEFT = 1;</code>
     */
    public static final int MOVE_UP_LEFT_VALUE = 1;
    /**
     * <code>MOVE_UP_RIGHT = 2;</code>
     */
    public static final int MOVE_UP_RIGHT_VALUE = 2;
    /**
     * <code>MOVE_RIGHT = 3;</code>
     */
    public static final int MOVE_RIGHT_VALUE = 3;
    /**
     * <code>MOVE_DOWN = 4;</code>
     */
    public static final int MOVE_DOWN_VALUE = 4;
    /**
     * <code>MOVE_DOWN_RIGHT = 5;</code>
     */
    public static final int MOVE_DOWN_RIGHT_VALUE = 5;
    /**
     * <code>MOVE_DOWN_LEFT = 6;</code>
     */
    public static final int MOVE_DOWN_LEFT_VALUE = 6;
    /**
     * <code>MOVE_LEFT = 7;</code>
     */
    public static final int MOVE_LEFT_VALUE = 7;
    /**
     * <code>IDLE = 8;</code>
     */
    public static final int IDLE_VALUE = 8;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static JoystickMoveDirectional valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static JoystickMoveDirectional forNumber(int value) {
      switch (value) {
        case 0: return MOVE_UP;
        case 1: return MOVE_UP_LEFT;
        case 2: return MOVE_UP_RIGHT;
        case 3: return MOVE_RIGHT;
        case 4: return MOVE_DOWN;
        case 5: return MOVE_DOWN_RIGHT;
        case 6: return MOVE_DOWN_LEFT;
        case 7: return MOVE_LEFT;
        case 8: return IDLE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<JoystickMoveDirectional>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        JoystickMoveDirectional> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<JoystickMoveDirectional>() {
            public JoystickMoveDirectional findValueByNumber(int number) {
              return JoystickMoveDirectional.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return commander.Command.getDescriptor().getEnumTypes().get(3);
    }

    private static final JoystickMoveDirectional[] VALUES = values();

    public static JoystickMoveDirectional valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private JoystickMoveDirectional(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:commander.JoystickMoveDirectional)
  }

  /**
   * Protobuf enum {@code commander.TouchMotion}
   */
  public enum TouchMotion
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NONE = 0;</code>
     */
    NONE(0),
    /**
     * <code>DOWN = 1;</code>
     */
    DOWN(1),
    /**
     * <code>MOVE = 2;</code>
     */
    MOVE(2),
    /**
     * <code>UP = 4;</code>
     */
    UP(4),
    /**
     * <code>DOWN_UP = 5;</code>
     */
    DOWN_UP(5),
    /**
     * <code>ALL = 7;</code>
     */
    ALL(7),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>NONE = 0;</code>
     */
    public static final int NONE_VALUE = 0;
    /**
     * <code>DOWN = 1;</code>
     */
    public static final int DOWN_VALUE = 1;
    /**
     * <code>MOVE = 2;</code>
     */
    public static final int MOVE_VALUE = 2;
    /**
     * <code>UP = 4;</code>
     */
    public static final int UP_VALUE = 4;
    /**
     * <code>DOWN_UP = 5;</code>
     */
    public static final int DOWN_UP_VALUE = 5;
    /**
     * <code>ALL = 7;</code>
     */
    public static final int ALL_VALUE = 7;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TouchMotion valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TouchMotion forNumber(int value) {
      switch (value) {
        case 0: return NONE;
        case 1: return DOWN;
        case 2: return MOVE;
        case 4: return UP;
        case 5: return DOWN_UP;
        case 7: return ALL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TouchMotion>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TouchMotion> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TouchMotion>() {
            public TouchMotion findValueByNumber(int number) {
              return TouchMotion.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return commander.Command.getDescriptor().getEnumTypes().get(4);
    }

    private static final TouchMotion[] VALUES = values();

    public static TouchMotion valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TouchMotion(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:commander.TouchMotion)
  }

  /**
   * Protobuf enum {@code commander.TouchInputId}
   */
  public enum TouchInputId
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>joystickInput = 0;</code>
     */
    joystickInput(0),
    /**
     * <code>button1Input = 1;</code>
     */
    button1Input(1),
    /**
     * <code>button2Input = 2;</code>
     */
    button2Input(2),
    /**
     * <code>tapInput = 3;</code>
     */
    tapInput(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>joystickInput = 0;</code>
     */
    public static final int joystickInput_VALUE = 0;
    /**
     * <code>button1Input = 1;</code>
     */
    public static final int button1Input_VALUE = 1;
    /**
     * <code>button2Input = 2;</code>
     */
    public static final int button2Input_VALUE = 2;
    /**
     * <code>tapInput = 3;</code>
     */
    public static final int tapInput_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TouchInputId valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TouchInputId forNumber(int value) {
      switch (value) {
        case 0: return joystickInput;
        case 1: return button1Input;
        case 2: return button2Input;
        case 3: return tapInput;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TouchInputId>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TouchInputId> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TouchInputId>() {
            public TouchInputId findValueByNumber(int number) {
              return TouchInputId.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return commander.Command.getDescriptor().getEnumTypes().get(5);
    }

    private static final TouchInputId[] VALUES = values();

    public static TouchInputId valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TouchInputId(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:commander.TouchInputId)
  }

  /**
   * Protobuf enum {@code commander.JoystickDirectionals}
   */
  public enum JoystickDirectionals
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>none = 0;</code>
     */
    none(0),
    /**
     * <code>all = 1;</code>
     */
    all(1),
    /**
     * <code>horizontal = 2;</code>
     */
    horizontal(2),
    /**
     * <code>vertical = 3;</code>
     */
    vertical(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>none = 0;</code>
     */
    public static final int none_VALUE = 0;
    /**
     * <code>all = 1;</code>
     */
    public static final int all_VALUE = 1;
    /**
     * <code>horizontal = 2;</code>
     */
    public static final int horizontal_VALUE = 2;
    /**
     * <code>vertical = 3;</code>
     */
    public static final int vertical_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static JoystickDirectionals valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static JoystickDirectionals forNumber(int value) {
      switch (value) {
        case 0: return none;
        case 1: return all;
        case 2: return horizontal;
        case 3: return vertical;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<JoystickDirectionals>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        JoystickDirectionals> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<JoystickDirectionals>() {
            public JoystickDirectionals findValueByNumber(int number) {
              return JoystickDirectionals.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return commander.Command.getDescriptor().getEnumTypes().get(6);
    }

    private static final JoystickDirectionals[] VALUES = values();

    public static JoystickDirectionals valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private JoystickDirectionals(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:commander.JoystickDirectionals)
  }

  /**
   * Protobuf enum {@code commander.NClipType}
   */
  public enum NClipType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>loop = 0;</code>
     */
    loop(0),
    /**
     * <code>once = 1;</code>
     */
    once(1),
    /**
     * <code>tiles = 2;</code>
     */
    tiles(2),
    /**
     * <code>svg = 3;</code>
     */
    svg(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>loop = 0;</code>
     */
    public static final int loop_VALUE = 0;
    /**
     * <code>once = 1;</code>
     */
    public static final int once_VALUE = 1;
    /**
     * <code>tiles = 2;</code>
     */
    public static final int tiles_VALUE = 2;
    /**
     * <code>svg = 3;</code>
     */
    public static final int svg_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static NClipType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static NClipType forNumber(int value) {
      switch (value) {
        case 0: return loop;
        case 1: return once;
        case 2: return tiles;
        case 3: return svg;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<NClipType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        NClipType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<NClipType>() {
            public NClipType findValueByNumber(int number) {
              return NClipType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return commander.Command.getDescriptor().getEnumTypes().get(7);
    }

    private static final NClipType[] VALUES = values();

    public static NClipType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private NClipType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:commander.NClipType)
  }

  public interface QueryInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:commander.QueryInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 qid = 1;</code>
     * @return The qid.
     */
    int getQid();

    /**
     * <code>float ax = 2;</code>
     * @return The ax.
     */
    float getAx();

    /**
     * <code>float ay = 3;</code>
     * @return The ay.
     */
    float getAy();

    /**
     * <code>float bx = 4;</code>
     * @return The bx.
     */
    float getBx();

    /**
     * <code>float by = 5;</code>
     * @return The by.
     */
    float getBy();

    /**
     * <code>uint32 max = 6;</code>
     * @return The max.
     */
    int getMax();

    /**
     * <code>bool trackableOnly = 7;</code>
     * @return The trackableOnly.
     */
    boolean getTrackableOnly();
  }
  /**
   * Protobuf type {@code commander.QueryInfo}
   */
  public static final class QueryInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:commander.QueryInfo)
      QueryInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use QueryInfo.newBuilder() to construct.
    private QueryInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private QueryInfo() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new QueryInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return commander.Command.internal_static_commander_QueryInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return commander.Command.internal_static_commander_QueryInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              commander.Command.QueryInfo.class, commander.Command.QueryInfo.Builder.class);
    }

    public static final int QID_FIELD_NUMBER = 1;
    private int qid_;
    /**
     * <code>uint32 qid = 1;</code>
     * @return The qid.
     */
    @java.lang.Override
    public int getQid() {
      return qid_;
    }

    public static final int AX_FIELD_NUMBER = 2;
    private float ax_;
    /**
     * <code>float ax = 2;</code>
     * @return The ax.
     */
    @java.lang.Override
    public float getAx() {
      return ax_;
    }

    public static final int AY_FIELD_NUMBER = 3;
    private float ay_;
    /**
     * <code>float ay = 3;</code>
     * @return The ay.
     */
    @java.lang.Override
    public float getAy() {
      return ay_;
    }

    public static final int BX_FIELD_NUMBER = 4;
    private float bx_;
    /**
     * <code>float bx = 4;</code>
     * @return The bx.
     */
    @java.lang.Override
    public float getBx() {
      return bx_;
    }

    public static final int BY_FIELD_NUMBER = 5;
    private float by_;
    /**
     * <code>float by = 5;</code>
     * @return The by.
     */
    @java.lang.Override
    public float getBy() {
      return by_;
    }

    public static final int MAX_FIELD_NUMBER = 6;
    private int max_;
    /**
     * <code>uint32 max = 6;</code>
     * @return The max.
     */
    @java.lang.Override
    public int getMax() {
      return max_;
    }

    public static final int TRACKABLEONLY_FIELD_NUMBER = 7;
    private boolean trackableOnly_;
    /**
     * <code>bool trackableOnly = 7;</code>
     * @return The trackableOnly.
     */
    @java.lang.Override
    public boolean getTrackableOnly() {
      return trackableOnly_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (qid_ != 0) {
        output.writeUInt32(1, qid_);
      }
      if (java.lang.Float.floatToRawIntBits(ax_) != 0) {
        output.writeFloat(2, ax_);
      }
      if (java.lang.Float.floatToRawIntBits(ay_) != 0) {
        output.writeFloat(3, ay_);
      }
      if (java.lang.Float.floatToRawIntBits(bx_) != 0) {
        output.writeFloat(4, bx_);
      }
      if (java.lang.Float.floatToRawIntBits(by_) != 0) {
        output.writeFloat(5, by_);
      }
      if (max_ != 0) {
        output.writeUInt32(6, max_);
      }
      if (trackableOnly_ != false) {
        output.writeBool(7, trackableOnly_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (qid_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, qid_);
      }
      if (java.lang.Float.floatToRawIntBits(ax_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, ax_);
      }
      if (java.lang.Float.floatToRawIntBits(ay_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, ay_);
      }
      if (java.lang.Float.floatToRawIntBits(bx_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, bx_);
      }
      if (java.lang.Float.floatToRawIntBits(by_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, by_);
      }
      if (max_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, max_);
      }
      if (trackableOnly_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, trackableOnly_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof commander.Command.QueryInfo)) {
        return super.equals(obj);
      }
      commander.Command.QueryInfo other = (commander.Command.QueryInfo) obj;

      if (getQid()
          != other.getQid()) return false;
      if (java.lang.Float.floatToIntBits(getAx())
          != java.lang.Float.floatToIntBits(
              other.getAx())) return false;
      if (java.lang.Float.floatToIntBits(getAy())
          != java.lang.Float.floatToIntBits(
              other.getAy())) return false;
      if (java.lang.Float.floatToIntBits(getBx())
          != java.lang.Float.floatToIntBits(
              other.getBx())) return false;
      if (java.lang.Float.floatToIntBits(getBy())
          != java.lang.Float.floatToIntBits(
              other.getBy())) return false;
      if (getMax()
          != other.getMax()) return false;
      if (getTrackableOnly()
          != other.getTrackableOnly()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + QID_FIELD_NUMBER;
      hash = (53 * hash) + getQid();
      hash = (37 * hash) + AX_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getAx());
      hash = (37 * hash) + AY_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getAy());
      hash = (37 * hash) + BX_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getBx());
      hash = (37 * hash) + BY_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getBy());
      hash = (37 * hash) + MAX_FIELD_NUMBER;
      hash = (53 * hash) + getMax();
      hash = (37 * hash) + TRACKABLEONLY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getTrackableOnly());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static commander.Command.QueryInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static commander.Command.QueryInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static commander.Command.QueryInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static commander.Command.QueryInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static commander.Command.QueryInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static commander.Command.QueryInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static commander.Command.QueryInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static commander.Command.QueryInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static commander.Command.QueryInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static commander.Command.QueryInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static commander.Command.QueryInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static commander.Command.QueryInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(commander.Command.QueryInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code commander.QueryInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:commander.QueryInfo)
        commander.Command.QueryInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return commander.Command.internal_static_commander_QueryInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return commander.Command.internal_static_commander_QueryInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                commander.Command.QueryInfo.class, commander.Command.QueryInfo.Builder.class);
      }

      // Construct using commander.Command.QueryInfo.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        qid_ = 0;

        ax_ = 0F;

        ay_ = 0F;

        bx_ = 0F;

        by_ = 0F;

        max_ = 0;

        trackableOnly_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return commander.Command.internal_static_commander_QueryInfo_descriptor;
      }

      @java.lang.Override
      public commander.Command.QueryInfo getDefaultInstanceForType() {
        return commander.Command.QueryInfo.getDefaultInstance();
      }

      @java.lang.Override
      public commander.Command.QueryInfo build() {
        commander.Command.QueryInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public commander.Command.QueryInfo buildPartial() {
        commander.Command.QueryInfo result = new commander.Command.QueryInfo(this);
        result.qid_ = qid_;
        result.ax_ = ax_;
        result.ay_ = ay_;
        result.bx_ = bx_;
        result.by_ = by_;
        result.max_ = max_;
        result.trackableOnly_ = trackableOnly_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof commander.Command.QueryInfo) {
          return mergeFrom((commander.Command.QueryInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(commander.Command.QueryInfo other) {
        if (other == commander.Command.QueryInfo.getDefaultInstance()) return this;
        if (other.getQid() != 0) {
          setQid(other.getQid());
        }
        if (other.getAx() != 0F) {
          setAx(other.getAx());
        }
        if (other.getAy() != 0F) {
          setAy(other.getAy());
        }
        if (other.getBx() != 0F) {
          setBx(other.getBx());
        }
        if (other.getBy() != 0F) {
          setBy(other.getBy());
        }
        if (other.getMax() != 0) {
          setMax(other.getMax());
        }
        if (other.getTrackableOnly() != false) {
          setTrackableOnly(other.getTrackableOnly());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                qid_ = input.readUInt32();

                break;
              } // case 8
              case 21: {
                ax_ = input.readFloat();

                break;
              } // case 21
              case 29: {
                ay_ = input.readFloat();

                break;
              } // case 29
              case 37: {
                bx_ = input.readFloat();

                break;
              } // case 37
              case 45: {
                by_ = input.readFloat();

                break;
              } // case 45
              case 48: {
                max_ = input.readUInt32();

                break;
              } // case 48
              case 56: {
                trackableOnly_ = input.readBool();

                break;
              } // case 56
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int qid_ ;
      /**
       * <code>uint32 qid = 1;</code>
       * @return The qid.
       */
      @java.lang.Override
      public int getQid() {
        return qid_;
      }
      /**
       * <code>uint32 qid = 1;</code>
       * @param value The qid to set.
       * @return This builder for chaining.
       */
      public Builder setQid(int value) {
        
        qid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 qid = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearQid() {
        
        qid_ = 0;
        onChanged();
        return this;
      }

      private float ax_ ;
      /**
       * <code>float ax = 2;</code>
       * @return The ax.
       */
      @java.lang.Override
      public float getAx() {
        return ax_;
      }
      /**
       * <code>float ax = 2;</code>
       * @param value The ax to set.
       * @return This builder for chaining.
       */
      public Builder setAx(float value) {
        
        ax_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float ax = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearAx() {
        
        ax_ = 0F;
        onChanged();
        return this;
      }

      private float ay_ ;
      /**
       * <code>float ay = 3;</code>
       * @return The ay.
       */
      @java.lang.Override
      public float getAy() {
        return ay_;
      }
      /**
       * <code>float ay = 3;</code>
       * @param value The ay to set.
       * @return This builder for chaining.
       */
      public Builder setAy(float value) {
        
        ay_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float ay = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearAy() {
        
        ay_ = 0F;
        onChanged();
        return this;
      }

      private float bx_ ;
      /**
       * <code>float bx = 4;</code>
       * @return The bx.
       */
      @java.lang.Override
      public float getBx() {
        return bx_;
      }
      /**
       * <code>float bx = 4;</code>
       * @param value The bx to set.
       * @return This builder for chaining.
       */
      public Builder setBx(float value) {
        
        bx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float bx = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearBx() {
        
        bx_ = 0F;
        onChanged();
        return this;
      }

      private float by_ ;
      /**
       * <code>float by = 5;</code>
       * @return The by.
       */
      @java.lang.Override
      public float getBy() {
        return by_;
      }
      /**
       * <code>float by = 5;</code>
       * @param value The by to set.
       * @return This builder for chaining.
       */
      public Builder setBy(float value) {
        
        by_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float by = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearBy() {
        
        by_ = 0F;
        onChanged();
        return this;
      }

      private int max_ ;
      /**
       * <code>uint32 max = 6;</code>
       * @return The max.
       */
      @java.lang.Override
      public int getMax() {
        return max_;
      }
      /**
       * <code>uint32 max = 6;</code>
       * @param value The max to set.
       * @return This builder for chaining.
       */
      public Builder setMax(int value) {
        
        max_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 max = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearMax() {
        
        max_ = 0;
        onChanged();
        return this;
      }

      private boolean trackableOnly_ ;
      /**
       * <code>bool trackableOnly = 7;</code>
       * @return The trackableOnly.
       */
      @java.lang.Override
      public boolean getTrackableOnly() {
        return trackableOnly_;
      }
      /**
       * <code>bool trackableOnly = 7;</code>
       * @param value The trackableOnly to set.
       * @return This builder for chaining.
       */
      public Builder setTrackableOnly(boolean value) {
        
        trackableOnly_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool trackableOnly = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearTrackableOnly() {
        
        trackableOnly_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:commander.QueryInfo)
    }

    // @@protoc_insertion_point(class_scope:commander.QueryInfo)
    private static final commander.Command.QueryInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new commander.Command.QueryInfo();
    }

    public static commander.Command.QueryInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<QueryInfo>
        PARSER = new com.google.protobuf.AbstractParser<QueryInfo>() {
      @java.lang.Override
      public QueryInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<QueryInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<QueryInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public commander.Command.QueryInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:commander.NEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated int32 ints = 1;</code>
     * @return A list containing the ints.
     */
    java.util.List<java.lang.Integer> getIntsList();
    /**
     * <code>repeated int32 ints = 1;</code>
     * @return The count of ints.
     */
    int getIntsCount();
    /**
     * <code>repeated int32 ints = 1;</code>
     * @param index The index of the element to return.
     * @return The ints at the given index.
     */
    int getInts(int index);

    /**
     * <code>repeated float floats = 2;</code>
     * @return A list containing the floats.
     */
    java.util.List<java.lang.Float> getFloatsList();
    /**
     * <code>repeated float floats = 2;</code>
     * @return The count of floats.
     */
    int getFloatsCount();
    /**
     * <code>repeated float floats = 2;</code>
     * @param index The index of the element to return.
     * @return The floats at the given index.
     */
    float getFloats(int index);

    /**
     * <code>repeated string strings = 3;</code>
     * @return A list containing the strings.
     */
    java.util.List<java.lang.String>
        getStringsList();
    /**
     * <code>repeated string strings = 3;</code>
     * @return The count of strings.
     */
    int getStringsCount();
    /**
     * <code>repeated string strings = 3;</code>
     * @param index The index of the element to return.
     * @return The strings at the given index.
     */
    java.lang.String getStrings(int index);
    /**
     * <code>repeated string strings = 3;</code>
     * @param index The index of the value to return.
     * @return The bytes of the strings at the given index.
     */
    com.google.protobuf.ByteString
        getStringsBytes(int index);
  }
  /**
   * Protobuf type {@code commander.NEvent}
   */
  public static final class NEvent extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:commander.NEvent)
      NEventOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NEvent.newBuilder() to construct.
    private NEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NEvent() {
      ints_ = emptyIntList();
      floats_ = emptyFloatList();
      strings_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new NEvent();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return commander.Command.internal_static_commander_NEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return commander.Command.internal_static_commander_NEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              commander.Command.NEvent.class, commander.Command.NEvent.Builder.class);
    }

    public static final int INTS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.IntList ints_;
    /**
     * <code>repeated int32 ints = 1;</code>
     * @return A list containing the ints.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getIntsList() {
      return ints_;
    }
    /**
     * <code>repeated int32 ints = 1;</code>
     * @return The count of ints.
     */
    public int getIntsCount() {
      return ints_.size();
    }
    /**
     * <code>repeated int32 ints = 1;</code>
     * @param index The index of the element to return.
     * @return The ints at the given index.
     */
    public int getInts(int index) {
      return ints_.getInt(index);
    }
    private int intsMemoizedSerializedSize = -1;

    public static final int FLOATS_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.FloatList floats_;
    /**
     * <code>repeated float floats = 2;</code>
     * @return A list containing the floats.
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getFloatsList() {
      return floats_;
    }
    /**
     * <code>repeated float floats = 2;</code>
     * @return The count of floats.
     */
    public int getFloatsCount() {
      return floats_.size();
    }
    /**
     * <code>repeated float floats = 2;</code>
     * @param index The index of the element to return.
     * @return The floats at the given index.
     */
    public float getFloats(int index) {
      return floats_.getFloat(index);
    }
    private int floatsMemoizedSerializedSize = -1;

    public static final int STRINGS_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList strings_;
    /**
     * <code>repeated string strings = 3;</code>
     * @return A list containing the strings.
     */
    public com.google.protobuf.ProtocolStringList
        getStringsList() {
      return strings_;
    }
    /**
     * <code>repeated string strings = 3;</code>
     * @return The count of strings.
     */
    public int getStringsCount() {
      return strings_.size();
    }
    /**
     * <code>repeated string strings = 3;</code>
     * @param index The index of the element to return.
     * @return The strings at the given index.
     */
    public java.lang.String getStrings(int index) {
      return strings_.get(index);
    }
    /**
     * <code>repeated string strings = 3;</code>
     * @param index The index of the value to return.
     * @return The bytes of the strings at the given index.
     */
    public com.google.protobuf.ByteString
        getStringsBytes(int index) {
      return strings_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getIntsList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(intsMemoizedSerializedSize);
      }
      for (int i = 0; i < ints_.size(); i++) {
        output.writeInt32NoTag(ints_.getInt(i));
      }
      if (getFloatsList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(floatsMemoizedSerializedSize);
      }
      for (int i = 0; i < floats_.size(); i++) {
        output.writeFloatNoTag(floats_.getFloat(i));
      }
      for (int i = 0; i < strings_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, strings_.getRaw(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < ints_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(ints_.getInt(i));
        }
        size += dataSize;
        if (!getIntsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        intsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getFloatsList().size();
        size += dataSize;
        if (!getFloatsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        floatsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < strings_.size(); i++) {
          dataSize += computeStringSizeNoTag(strings_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getStringsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof commander.Command.NEvent)) {
        return super.equals(obj);
      }
      commander.Command.NEvent other = (commander.Command.NEvent) obj;

      if (!getIntsList()
          .equals(other.getIntsList())) return false;
      if (!getFloatsList()
          .equals(other.getFloatsList())) return false;
      if (!getStringsList()
          .equals(other.getStringsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getIntsCount() > 0) {
        hash = (37 * hash) + INTS_FIELD_NUMBER;
        hash = (53 * hash) + getIntsList().hashCode();
      }
      if (getFloatsCount() > 0) {
        hash = (37 * hash) + FLOATS_FIELD_NUMBER;
        hash = (53 * hash) + getFloatsList().hashCode();
      }
      if (getStringsCount() > 0) {
        hash = (37 * hash) + STRINGS_FIELD_NUMBER;
        hash = (53 * hash) + getStringsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static commander.Command.NEvent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static commander.Command.NEvent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static commander.Command.NEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static commander.Command.NEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static commander.Command.NEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static commander.Command.NEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static commander.Command.NEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static commander.Command.NEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static commander.Command.NEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static commander.Command.NEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static commander.Command.NEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static commander.Command.NEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(commander.Command.NEvent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code commander.NEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:commander.NEvent)
        commander.Command.NEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return commander.Command.internal_static_commander_NEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return commander.Command.internal_static_commander_NEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                commander.Command.NEvent.class, commander.Command.NEvent.Builder.class);
      }

      // Construct using commander.Command.NEvent.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        ints_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        floats_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000002);
        strings_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return commander.Command.internal_static_commander_NEvent_descriptor;
      }

      @java.lang.Override
      public commander.Command.NEvent getDefaultInstanceForType() {
        return commander.Command.NEvent.getDefaultInstance();
      }

      @java.lang.Override
      public commander.Command.NEvent build() {
        commander.Command.NEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public commander.Command.NEvent buildPartial() {
        commander.Command.NEvent result = new commander.Command.NEvent(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          ints_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.ints_ = ints_;
        if (((bitField0_ & 0x00000002) != 0)) {
          floats_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.floats_ = floats_;
        if (((bitField0_ & 0x00000004) != 0)) {
          strings_ = strings_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.strings_ = strings_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof commander.Command.NEvent) {
          return mergeFrom((commander.Command.NEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(commander.Command.NEvent other) {
        if (other == commander.Command.NEvent.getDefaultInstance()) return this;
        if (!other.ints_.isEmpty()) {
          if (ints_.isEmpty()) {
            ints_ = other.ints_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureIntsIsMutable();
            ints_.addAll(other.ints_);
          }
          onChanged();
        }
        if (!other.floats_.isEmpty()) {
          if (floats_.isEmpty()) {
            floats_ = other.floats_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureFloatsIsMutable();
            floats_.addAll(other.floats_);
          }
          onChanged();
        }
        if (!other.strings_.isEmpty()) {
          if (strings_.isEmpty()) {
            strings_ = other.strings_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureStringsIsMutable();
            strings_.addAll(other.strings_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int v = input.readInt32();
                ensureIntsIsMutable();
                ints_.addInt(v);
                break;
              } // case 8
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureIntsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  ints_.addInt(input.readInt32());
                }
                input.popLimit(limit);
                break;
              } // case 10
              case 21: {
                float v = input.readFloat();
                ensureFloatsIsMutable();
                floats_.addFloat(v);
                break;
              } // case 21
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureFloatsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  floats_.addFloat(input.readFloat());
                }
                input.popLimit(limit);
                break;
              } // case 18
              case 26: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureStringsIsMutable();
                strings_.add(s);
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.IntList ints_ = emptyIntList();
      private void ensureIntsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          ints_ = mutableCopy(ints_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 ints = 1;</code>
       * @return A list containing the ints.
       */
      public java.util.List<java.lang.Integer>
          getIntsList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(ints_) : ints_;
      }
      /**
       * <code>repeated int32 ints = 1;</code>
       * @return The count of ints.
       */
      public int getIntsCount() {
        return ints_.size();
      }
      /**
       * <code>repeated int32 ints = 1;</code>
       * @param index The index of the element to return.
       * @return The ints at the given index.
       */
      public int getInts(int index) {
        return ints_.getInt(index);
      }
      /**
       * <code>repeated int32 ints = 1;</code>
       * @param index The index to set the value at.
       * @param value The ints to set.
       * @return This builder for chaining.
       */
      public Builder setInts(
          int index, int value) {
        ensureIntsIsMutable();
        ints_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ints = 1;</code>
       * @param value The ints to add.
       * @return This builder for chaining.
       */
      public Builder addInts(int value) {
        ensureIntsIsMutable();
        ints_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ints = 1;</code>
       * @param values The ints to add.
       * @return This builder for chaining.
       */
      public Builder addAllInts(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureIntsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, ints_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ints = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearInts() {
        ints_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.FloatList floats_ = emptyFloatList();
      private void ensureFloatsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          floats_ = mutableCopy(floats_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated float floats = 2;</code>
       * @return A list containing the floats.
       */
      public java.util.List<java.lang.Float>
          getFloatsList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(floats_) : floats_;
      }
      /**
       * <code>repeated float floats = 2;</code>
       * @return The count of floats.
       */
      public int getFloatsCount() {
        return floats_.size();
      }
      /**
       * <code>repeated float floats = 2;</code>
       * @param index The index of the element to return.
       * @return The floats at the given index.
       */
      public float getFloats(int index) {
        return floats_.getFloat(index);
      }
      /**
       * <code>repeated float floats = 2;</code>
       * @param index The index to set the value at.
       * @param value The floats to set.
       * @return This builder for chaining.
       */
      public Builder setFloats(
          int index, float value) {
        ensureFloatsIsMutable();
        floats_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float floats = 2;</code>
       * @param value The floats to add.
       * @return This builder for chaining.
       */
      public Builder addFloats(float value) {
        ensureFloatsIsMutable();
        floats_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float floats = 2;</code>
       * @param values The floats to add.
       * @return This builder for chaining.
       */
      public Builder addAllFloats(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureFloatsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, floats_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float floats = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearFloats() {
        floats_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList strings_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureStringsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          strings_ = new com.google.protobuf.LazyStringArrayList(strings_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated string strings = 3;</code>
       * @return A list containing the strings.
       */
      public com.google.protobuf.ProtocolStringList
          getStringsList() {
        return strings_.getUnmodifiableView();
      }
      /**
       * <code>repeated string strings = 3;</code>
       * @return The count of strings.
       */
      public int getStringsCount() {
        return strings_.size();
      }
      /**
       * <code>repeated string strings = 3;</code>
       * @param index The index of the element to return.
       * @return The strings at the given index.
       */
      public java.lang.String getStrings(int index) {
        return strings_.get(index);
      }
      /**
       * <code>repeated string strings = 3;</code>
       * @param index The index of the value to return.
       * @return The bytes of the strings at the given index.
       */
      public com.google.protobuf.ByteString
          getStringsBytes(int index) {
        return strings_.getByteString(index);
      }
      /**
       * <code>repeated string strings = 3;</code>
       * @param index The index to set the value at.
       * @param value The strings to set.
       * @return This builder for chaining.
       */
      public Builder setStrings(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStringsIsMutable();
        strings_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string strings = 3;</code>
       * @param value The strings to add.
       * @return This builder for chaining.
       */
      public Builder addStrings(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStringsIsMutable();
        strings_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string strings = 3;</code>
       * @param values The strings to add.
       * @return This builder for chaining.
       */
      public Builder addAllStrings(
          java.lang.Iterable<java.lang.String> values) {
        ensureStringsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, strings_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string strings = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearStrings() {
        strings_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string strings = 3;</code>
       * @param value The bytes of the strings to add.
       * @return This builder for chaining.
       */
      public Builder addStringsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureStringsIsMutable();
        strings_.add(value);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:commander.NEvent)
    }

    // @@protoc_insertion_point(class_scope:commander.NEvent)
    private static final commander.Command.NEvent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new commander.Command.NEvent();
    }

    public static commander.Command.NEvent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NEvent>
        PARSER = new com.google.protobuf.AbstractParser<NEvent>() {
      @java.lang.Override
      public NEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<NEvent> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NEvent> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public commander.Command.NEvent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NStageInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:commander.NStageInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 sn = 1;</code>
     * @return The sn.
     */
    int getSn();

    /**
     * <code>string background = 2;</code>
     * @return The background.
     */
    java.lang.String getBackground();
    /**
     * <code>string background = 2;</code>
     * @return The bytes for background.
     */
    com.google.protobuf.ByteString
        getBackgroundBytes();

    /**
     * <code>float gravityX = 3;</code>
     * @return The gravityX.
     */
    float getGravityX();

    /**
     * <code>float gravityY = 4;</code>
     * @return The gravityY.
     */
    float getGravityY();

    /**
     * <code>float width = 5;</code>
     * @return The width.
     */
    float getWidth();

    /**
     * <code>float height = 6;</code>
     * @return The height.
     */
    float getHeight();

    /**
     * <code>bool debug = 7;</code>
     * @return The debug.
     */
    boolean getDebug();

    /**
     * <code>.commander.JoystickDirectionals joystickDirectionals = 8;</code>
     * @return The enum numeric value on the wire for joystickDirectionals.
     */
    int getJoystickDirectionalsValue();
    /**
     * <code>.commander.JoystickDirectionals joystickDirectionals = 8;</code>
     * @return The joystickDirectionals.
     */
    commander.Command.JoystickDirectionals getJoystickDirectionals();

    /**
     * <code>uint32 joystickPrecision = 9;</code>
     * @return The joystickPrecision.
     */
    int getJoystickPrecision();

    /**
     * <code>.commander.TouchMotion button1 = 10;</code>
     * @return The enum numeric value on the wire for button1.
     */
    int getButton1Value();
    /**
     * <code>.commander.TouchMotion button1 = 10;</code>
     * @return The button1.
     */
    commander.Command.TouchMotion getButton1();

    /**
     * <code>.commander.TouchMotion button2 = 11;</code>
     * @return The enum numeric value on the wire for button2.
     */
    int getButton2Value();
    /**
     * <code>.commander.TouchMotion button2 = 11;</code>
     * @return The button2.
     */
    commander.Command.TouchMotion getButton2();

    /**
     * <code>.commander.TouchMotion tap = 12;</code>
     * @return The enum numeric value on the wire for tap.
     */
    int getTapValue();
    /**
     * <code>.commander.TouchMotion tap = 12;</code>
     * @return The tap.
     */
    commander.Command.TouchMotion getTap();

    /**
     * <code>float tapMinMoveDistance = 13;</code>
     * @return The tapMinMoveDistance.
     */
    float getTapMinMoveDistance();

    /**
     * <code>float distanceTrackingInternal = 14;</code>
     * @return The distanceTrackingInternal.
     */
    float getDistanceTrackingInternal();
  }
  /**
   * Protobuf type {@code commander.NStageInfo}
   */
  public static final class NStageInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:commander.NStageInfo)
      NStageInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NStageInfo.newBuilder() to construct.
    private NStageInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NStageInfo() {
      background_ = "";
      joystickDirectionals_ = 0;
      button1_ = 0;
      button2_ = 0;
      tap_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new NStageInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return commander.Command.internal_static_commander_NStageInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return commander.Command.internal_static_commander_NStageInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              commander.Command.NStageInfo.class, commander.Command.NStageInfo.Builder.class);
    }

    public static final int SN_FIELD_NUMBER = 1;
    private int sn_;
    /**
     * <code>uint32 sn = 1;</code>
     * @return The sn.
     */
    @java.lang.Override
    public int getSn() {
      return sn_;
    }

    public static final int BACKGROUND_FIELD_NUMBER = 2;
    private volatile java.lang.Object background_;
    /**
     * <code>string background = 2;</code>
     * @return The background.
     */
    @java.lang.Override
    public java.lang.String getBackground() {
      java.lang.Object ref = background_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        background_ = s;
        return s;
      }
    }
    /**
     * <code>string background = 2;</code>
     * @return The bytes for background.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getBackgroundBytes() {
      java.lang.Object ref = background_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        background_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GRAVITYX_FIELD_NUMBER = 3;
    private float gravityX_;
    /**
     * <code>float gravityX = 3;</code>
     * @return The gravityX.
     */
    @java.lang.Override
    public float getGravityX() {
      return gravityX_;
    }

    public static final int GRAVITYY_FIELD_NUMBER = 4;
    private float gravityY_;
    /**
     * <code>float gravityY = 4;</code>
     * @return The gravityY.
     */
    @java.lang.Override
    public float getGravityY() {
      return gravityY_;
    }

    public static final int WIDTH_FIELD_NUMBER = 5;
    private float width_;
    /**
     * <code>float width = 5;</code>
     * @return The width.
     */
    @java.lang.Override
    public float getWidth() {
      return width_;
    }

    public static final int HEIGHT_FIELD_NUMBER = 6;
    private float height_;
    /**
     * <code>float height = 6;</code>
     * @return The height.
     */
    @java.lang.Override
    public float getHeight() {
      return height_;
    }

    public static final int DEBUG_FIELD_NUMBER = 7;
    private boolean debug_;
    /**
     * <code>bool debug = 7;</code>
     * @return The debug.
     */
    @java.lang.Override
    public boolean getDebug() {
      return debug_;
    }

    public static final int JOYSTICKDIRECTIONALS_FIELD_NUMBER = 8;
    private int joystickDirectionals_;
    /**
     * <code>.commander.JoystickDirectionals joystickDirectionals = 8;</code>
     * @return The enum numeric value on the wire for joystickDirectionals.
     */
    @java.lang.Override public int getJoystickDirectionalsValue() {
      return joystickDirectionals_;
    }
    /**
     * <code>.commander.JoystickDirectionals joystickDirectionals = 8;</code>
     * @return The joystickDirectionals.
     */
    @java.lang.Override public commander.Command.JoystickDirectionals getJoystickDirectionals() {
      @SuppressWarnings("deprecation")
      commander.Command.JoystickDirectionals result = commander.Command.JoystickDirectionals.valueOf(joystickDirectionals_);
      return result == null ? commander.Command.JoystickDirectionals.UNRECOGNIZED : result;
    }

    public static final int JOYSTICKPRECISION_FIELD_NUMBER = 9;
    private int joystickPrecision_;
    /**
     * <code>uint32 joystickPrecision = 9;</code>
     * @return The joystickPrecision.
     */
    @java.lang.Override
    public int getJoystickPrecision() {
      return joystickPrecision_;
    }

    public static final int BUTTON1_FIELD_NUMBER = 10;
    private int button1_;
    /**
     * <code>.commander.TouchMotion button1 = 10;</code>
     * @return The enum numeric value on the wire for button1.
     */
    @java.lang.Override public int getButton1Value() {
      return button1_;
    }
    /**
     * <code>.commander.TouchMotion button1 = 10;</code>
     * @return The button1.
     */
    @java.lang.Override public commander.Command.TouchMotion getButton1() {
      @SuppressWarnings("deprecation")
      commander.Command.TouchMotion result = commander.Command.TouchMotion.valueOf(button1_);
      return result == null ? commander.Command.TouchMotion.UNRECOGNIZED : result;
    }

    public static final int BUTTON2_FIELD_NUMBER = 11;
    private int button2_;
    /**
     * <code>.commander.TouchMotion button2 = 11;</code>
     * @return The enum numeric value on the wire for button2.
     */
    @java.lang.Override public int getButton2Value() {
      return button2_;
    }
    /**
     * <code>.commander.TouchMotion button2 = 11;</code>
     * @return The button2.
     */
    @java.lang.Override public commander.Command.TouchMotion getButton2() {
      @SuppressWarnings("deprecation")
      commander.Command.TouchMotion result = commander.Command.TouchMotion.valueOf(button2_);
      return result == null ? commander.Command.TouchMotion.UNRECOGNIZED : result;
    }

    public static final int TAP_FIELD_NUMBER = 12;
    private int tap_;
    /**
     * <code>.commander.TouchMotion tap = 12;</code>
     * @return The enum numeric value on the wire for tap.
     */
    @java.lang.Override public int getTapValue() {
      return tap_;
    }
    /**
     * <code>.commander.TouchMotion tap = 12;</code>
     * @return The tap.
     */
    @java.lang.Override public commander.Command.TouchMotion getTap() {
      @SuppressWarnings("deprecation")
      commander.Command.TouchMotion result = commander.Command.TouchMotion.valueOf(tap_);
      return result == null ? commander.Command.TouchMotion.UNRECOGNIZED : result;
    }

    public static final int TAPMINMOVEDISTANCE_FIELD_NUMBER = 13;
    private float tapMinMoveDistance_;
    /**
     * <code>float tapMinMoveDistance = 13;</code>
     * @return The tapMinMoveDistance.
     */
    @java.lang.Override
    public float getTapMinMoveDistance() {
      return tapMinMoveDistance_;
    }

    public static final int DISTANCETRACKINGINTERNAL_FIELD_NUMBER = 14;
    private float distanceTrackingInternal_;
    /**
     * <code>float distanceTrackingInternal = 14;</code>
     * @return The distanceTrackingInternal.
     */
    @java.lang.Override
    public float getDistanceTrackingInternal() {
      return distanceTrackingInternal_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (sn_ != 0) {
        output.writeUInt32(1, sn_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(background_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, background_);
      }
      if (java.lang.Float.floatToRawIntBits(gravityX_) != 0) {
        output.writeFloat(3, gravityX_);
      }
      if (java.lang.Float.floatToRawIntBits(gravityY_) != 0) {
        output.writeFloat(4, gravityY_);
      }
      if (java.lang.Float.floatToRawIntBits(width_) != 0) {
        output.writeFloat(5, width_);
      }
      if (java.lang.Float.floatToRawIntBits(height_) != 0) {
        output.writeFloat(6, height_);
      }
      if (debug_ != false) {
        output.writeBool(7, debug_);
      }
      if (joystickDirectionals_ != commander.Command.JoystickDirectionals.none.getNumber()) {
        output.writeEnum(8, joystickDirectionals_);
      }
      if (joystickPrecision_ != 0) {
        output.writeUInt32(9, joystickPrecision_);
      }
      if (button1_ != commander.Command.TouchMotion.NONE.getNumber()) {
        output.writeEnum(10, button1_);
      }
      if (button2_ != commander.Command.TouchMotion.NONE.getNumber()) {
        output.writeEnum(11, button2_);
      }
      if (tap_ != commander.Command.TouchMotion.NONE.getNumber()) {
        output.writeEnum(12, tap_);
      }
      if (java.lang.Float.floatToRawIntBits(tapMinMoveDistance_) != 0) {
        output.writeFloat(13, tapMinMoveDistance_);
      }
      if (java.lang.Float.floatToRawIntBits(distanceTrackingInternal_) != 0) {
        output.writeFloat(14, distanceTrackingInternal_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (sn_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, sn_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(background_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, background_);
      }
      if (java.lang.Float.floatToRawIntBits(gravityX_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, gravityX_);
      }
      if (java.lang.Float.floatToRawIntBits(gravityY_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, gravityY_);
      }
      if (java.lang.Float.floatToRawIntBits(width_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, width_);
      }
      if (java.lang.Float.floatToRawIntBits(height_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, height_);
      }
      if (debug_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, debug_);
      }
      if (joystickDirectionals_ != commander.Command.JoystickDirectionals.none.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(8, joystickDirectionals_);
      }
      if (joystickPrecision_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, joystickPrecision_);
      }
      if (button1_ != commander.Command.TouchMotion.NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(10, button1_);
      }
      if (button2_ != commander.Command.TouchMotion.NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(11, button2_);
      }
      if (tap_ != commander.Command.TouchMotion.NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(12, tap_);
      }
      if (java.lang.Float.floatToRawIntBits(tapMinMoveDistance_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(13, tapMinMoveDistance_);
      }
      if (java.lang.Float.floatToRawIntBits(distanceTrackingInternal_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(14, distanceTrackingInternal_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof commander.Command.NStageInfo)) {
        return super.equals(obj);
      }
      commander.Command.NStageInfo other = (commander.Command.NStageInfo) obj;

      if (getSn()
          != other.getSn()) return false;
      if (!getBackground()
          .equals(other.getBackground())) return false;
      if (java.lang.Float.floatToIntBits(getGravityX())
          != java.lang.Float.floatToIntBits(
              other.getGravityX())) return false;
      if (java.lang.Float.floatToIntBits(getGravityY())
          != java.lang.Float.floatToIntBits(
              other.getGravityY())) return false;
      if (java.lang.Float.floatToIntBits(getWidth())
          != java.lang.Float.floatToIntBits(
              other.getWidth())) return false;
      if (java.lang.Float.floatToIntBits(getHeight())
          != java.lang.Float.floatToIntBits(
              other.getHeight())) return false;
      if (getDebug()
          != other.getDebug()) return false;
      if (joystickDirectionals_ != other.joystickDirectionals_) return false;
      if (getJoystickPrecision()
          != other.getJoystickPrecision()) return false;
      if (button1_ != other.button1_) return false;
      if (button2_ != other.button2_) return false;
      if (tap_ != other.tap_) return false;
      if (java.lang.Float.floatToIntBits(getTapMinMoveDistance())
          != java.lang.Float.floatToIntBits(
              other.getTapMinMoveDistance())) return false;
      if (java.lang.Float.floatToIntBits(getDistanceTrackingInternal())
          != java.lang.Float.floatToIntBits(
              other.getDistanceTrackingInternal())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SN_FIELD_NUMBER;
      hash = (53 * hash) + getSn();
      hash = (37 * hash) + BACKGROUND_FIELD_NUMBER;
      hash = (53 * hash) + getBackground().hashCode();
      hash = (37 * hash) + GRAVITYX_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getGravityX());
      hash = (37 * hash) + GRAVITYY_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getGravityY());
      hash = (37 * hash) + WIDTH_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getWidth());
      hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getHeight());
      hash = (37 * hash) + DEBUG_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDebug());
      hash = (37 * hash) + JOYSTICKDIRECTIONALS_FIELD_NUMBER;
      hash = (53 * hash) + joystickDirectionals_;
      hash = (37 * hash) + JOYSTICKPRECISION_FIELD_NUMBER;
      hash = (53 * hash) + getJoystickPrecision();
      hash = (37 * hash) + BUTTON1_FIELD_NUMBER;
      hash = (53 * hash) + button1_;
      hash = (37 * hash) + BUTTON2_FIELD_NUMBER;
      hash = (53 * hash) + button2_;
      hash = (37 * hash) + TAP_FIELD_NUMBER;
      hash = (53 * hash) + tap_;
      hash = (37 * hash) + TAPMINMOVEDISTANCE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getTapMinMoveDistance());
      hash = (37 * hash) + DISTANCETRACKINGINTERNAL_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getDistanceTrackingInternal());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static commander.Command.NStageInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static commander.Command.NStageInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static commander.Command.NStageInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static commander.Command.NStageInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static commander.Command.NStageInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static commander.Command.NStageInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static commander.Command.NStageInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static commander.Command.NStageInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static commander.Command.NStageInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static commander.Command.NStageInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static commander.Command.NStageInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static commander.Command.NStageInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(commander.Command.NStageInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code commander.NStageInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:commander.NStageInfo)
        commander.Command.NStageInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return commander.Command.internal_static_commander_NStageInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return commander.Command.internal_static_commander_NStageInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                commander.Command.NStageInfo.class, commander.Command.NStageInfo.Builder.class);
      }

      // Construct using commander.Command.NStageInfo.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        sn_ = 0;

        background_ = "";

        gravityX_ = 0F;

        gravityY_ = 0F;

        width_ = 0F;

        height_ = 0F;

        debug_ = false;

        joystickDirectionals_ = 0;

        joystickPrecision_ = 0;

        button1_ = 0;

        button2_ = 0;

        tap_ = 0;

        tapMinMoveDistance_ = 0F;

        distanceTrackingInternal_ = 0F;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return commander.Command.internal_static_commander_NStageInfo_descriptor;
      }

      @java.lang.Override
      public commander.Command.NStageInfo getDefaultInstanceForType() {
        return commander.Command.NStageInfo.getDefaultInstance();
      }

      @java.lang.Override
      public commander.Command.NStageInfo build() {
        commander.Command.NStageInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public commander.Command.NStageInfo buildPartial() {
        commander.Command.NStageInfo result = new commander.Command.NStageInfo(this);
        result.sn_ = sn_;
        result.background_ = background_;
        result.gravityX_ = gravityX_;
        result.gravityY_ = gravityY_;
        result.width_ = width_;
        result.height_ = height_;
        result.debug_ = debug_;
        result.joystickDirectionals_ = joystickDirectionals_;
        result.joystickPrecision_ = joystickPrecision_;
        result.button1_ = button1_;
        result.button2_ = button2_;
        result.tap_ = tap_;
        result.tapMinMoveDistance_ = tapMinMoveDistance_;
        result.distanceTrackingInternal_ = distanceTrackingInternal_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof commander.Command.NStageInfo) {
          return mergeFrom((commander.Command.NStageInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(commander.Command.NStageInfo other) {
        if (other == commander.Command.NStageInfo.getDefaultInstance()) return this;
        if (other.getSn() != 0) {
          setSn(other.getSn());
        }
        if (!other.getBackground().isEmpty()) {
          background_ = other.background_;
          onChanged();
        }
        if (other.getGravityX() != 0F) {
          setGravityX(other.getGravityX());
        }
        if (other.getGravityY() != 0F) {
          setGravityY(other.getGravityY());
        }
        if (other.getWidth() != 0F) {
          setWidth(other.getWidth());
        }
        if (other.getHeight() != 0F) {
          setHeight(other.getHeight());
        }
        if (other.getDebug() != false) {
          setDebug(other.getDebug());
        }
        if (other.joystickDirectionals_ != 0) {
          setJoystickDirectionalsValue(other.getJoystickDirectionalsValue());
        }
        if (other.getJoystickPrecision() != 0) {
          setJoystickPrecision(other.getJoystickPrecision());
        }
        if (other.button1_ != 0) {
          setButton1Value(other.getButton1Value());
        }
        if (other.button2_ != 0) {
          setButton2Value(other.getButton2Value());
        }
        if (other.tap_ != 0) {
          setTapValue(other.getTapValue());
        }
        if (other.getTapMinMoveDistance() != 0F) {
          setTapMinMoveDistance(other.getTapMinMoveDistance());
        }
        if (other.getDistanceTrackingInternal() != 0F) {
          setDistanceTrackingInternal(other.getDistanceTrackingInternal());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                sn_ = input.readUInt32();

                break;
              } // case 8
              case 18: {
                background_ = input.readStringRequireUtf8();

                break;
              } // case 18
              case 29: {
                gravityX_ = input.readFloat();

                break;
              } // case 29
              case 37: {
                gravityY_ = input.readFloat();

                break;
              } // case 37
              case 45: {
                width_ = input.readFloat();

                break;
              } // case 45
              case 53: {
                height_ = input.readFloat();

                break;
              } // case 53
              case 56: {
                debug_ = input.readBool();

                break;
              } // case 56
              case 64: {
                joystickDirectionals_ = input.readEnum();

                break;
              } // case 64
              case 72: {
                joystickPrecision_ = input.readUInt32();

                break;
              } // case 72
              case 80: {
                button1_ = input.readEnum();

                break;
              } // case 80
              case 88: {
                button2_ = input.readEnum();

                break;
              } // case 88
              case 96: {
                tap_ = input.readEnum();

                break;
              } // case 96
              case 109: {
                tapMinMoveDistance_ = input.readFloat();

                break;
              } // case 109
              case 117: {
                distanceTrackingInternal_ = input.readFloat();

                break;
              } // case 117
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int sn_ ;
      /**
       * <code>uint32 sn = 1;</code>
       * @return The sn.
       */
      @java.lang.Override
      public int getSn() {
        return sn_;
      }
      /**
       * <code>uint32 sn = 1;</code>
       * @param value The sn to set.
       * @return This builder for chaining.
       */
      public Builder setSn(int value) {
        
        sn_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 sn = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSn() {
        
        sn_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object background_ = "";
      /**
       * <code>string background = 2;</code>
       * @return The background.
       */
      public java.lang.String getBackground() {
        java.lang.Object ref = background_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          background_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string background = 2;</code>
       * @return The bytes for background.
       */
      public com.google.protobuf.ByteString
          getBackgroundBytes() {
        java.lang.Object ref = background_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          background_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string background = 2;</code>
       * @param value The background to set.
       * @return This builder for chaining.
       */
      public Builder setBackground(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        background_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string background = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearBackground() {
        
        background_ = getDefaultInstance().getBackground();
        onChanged();
        return this;
      }
      /**
       * <code>string background = 2;</code>
       * @param value The bytes for background to set.
       * @return This builder for chaining.
       */
      public Builder setBackgroundBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        background_ = value;
        onChanged();
        return this;
      }

      private float gravityX_ ;
      /**
       * <code>float gravityX = 3;</code>
       * @return The gravityX.
       */
      @java.lang.Override
      public float getGravityX() {
        return gravityX_;
      }
      /**
       * <code>float gravityX = 3;</code>
       * @param value The gravityX to set.
       * @return This builder for chaining.
       */
      public Builder setGravityX(float value) {
        
        gravityX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float gravityX = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearGravityX() {
        
        gravityX_ = 0F;
        onChanged();
        return this;
      }

      private float gravityY_ ;
      /**
       * <code>float gravityY = 4;</code>
       * @return The gravityY.
       */
      @java.lang.Override
      public float getGravityY() {
        return gravityY_;
      }
      /**
       * <code>float gravityY = 4;</code>
       * @param value The gravityY to set.
       * @return This builder for chaining.
       */
      public Builder setGravityY(float value) {
        
        gravityY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float gravityY = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearGravityY() {
        
        gravityY_ = 0F;
        onChanged();
        return this;
      }

      private float width_ ;
      /**
       * <code>float width = 5;</code>
       * @return The width.
       */
      @java.lang.Override
      public float getWidth() {
        return width_;
      }
      /**
       * <code>float width = 5;</code>
       * @param value The width to set.
       * @return This builder for chaining.
       */
      public Builder setWidth(float value) {
        
        width_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float width = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearWidth() {
        
        width_ = 0F;
        onChanged();
        return this;
      }

      private float height_ ;
      /**
       * <code>float height = 6;</code>
       * @return The height.
       */
      @java.lang.Override
      public float getHeight() {
        return height_;
      }
      /**
       * <code>float height = 6;</code>
       * @param value The height to set.
       * @return This builder for chaining.
       */
      public Builder setHeight(float value) {
        
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float height = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeight() {
        
        height_ = 0F;
        onChanged();
        return this;
      }

      private boolean debug_ ;
      /**
       * <code>bool debug = 7;</code>
       * @return The debug.
       */
      @java.lang.Override
      public boolean getDebug() {
        return debug_;
      }
      /**
       * <code>bool debug = 7;</code>
       * @param value The debug to set.
       * @return This builder for chaining.
       */
      public Builder setDebug(boolean value) {
        
        debug_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool debug = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearDebug() {
        
        debug_ = false;
        onChanged();
        return this;
      }

      private int joystickDirectionals_ = 0;
      /**
       * <code>.commander.JoystickDirectionals joystickDirectionals = 8;</code>
       * @return The enum numeric value on the wire for joystickDirectionals.
       */
      @java.lang.Override public int getJoystickDirectionalsValue() {
        return joystickDirectionals_;
      }
      /**
       * <code>.commander.JoystickDirectionals joystickDirectionals = 8;</code>
       * @param value The enum numeric value on the wire for joystickDirectionals to set.
       * @return This builder for chaining.
       */
      public Builder setJoystickDirectionalsValue(int value) {
        
        joystickDirectionals_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.commander.JoystickDirectionals joystickDirectionals = 8;</code>
       * @return The joystickDirectionals.
       */
      @java.lang.Override
      public commander.Command.JoystickDirectionals getJoystickDirectionals() {
        @SuppressWarnings("deprecation")
        commander.Command.JoystickDirectionals result = commander.Command.JoystickDirectionals.valueOf(joystickDirectionals_);
        return result == null ? commander.Command.JoystickDirectionals.UNRECOGNIZED : result;
      }
      /**
       * <code>.commander.JoystickDirectionals joystickDirectionals = 8;</code>
       * @param value The joystickDirectionals to set.
       * @return This builder for chaining.
       */
      public Builder setJoystickDirectionals(commander.Command.JoystickDirectionals value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        joystickDirectionals_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.commander.JoystickDirectionals joystickDirectionals = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearJoystickDirectionals() {
        
        joystickDirectionals_ = 0;
        onChanged();
        return this;
      }

      private int joystickPrecision_ ;
      /**
       * <code>uint32 joystickPrecision = 9;</code>
       * @return The joystickPrecision.
       */
      @java.lang.Override
      public int getJoystickPrecision() {
        return joystickPrecision_;
      }
      /**
       * <code>uint32 joystickPrecision = 9;</code>
       * @param value The joystickPrecision to set.
       * @return This builder for chaining.
       */
      public Builder setJoystickPrecision(int value) {
        
        joystickPrecision_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 joystickPrecision = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearJoystickPrecision() {
        
        joystickPrecision_ = 0;
        onChanged();
        return this;
      }

      private int button1_ = 0;
      /**
       * <code>.commander.TouchMotion button1 = 10;</code>
       * @return The enum numeric value on the wire for button1.
       */
      @java.lang.Override public int getButton1Value() {
        return button1_;
      }
      /**
       * <code>.commander.TouchMotion button1 = 10;</code>
       * @param value The enum numeric value on the wire for button1 to set.
       * @return This builder for chaining.
       */
      public Builder setButton1Value(int value) {
        
        button1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.commander.TouchMotion button1 = 10;</code>
       * @return The button1.
       */
      @java.lang.Override
      public commander.Command.TouchMotion getButton1() {
        @SuppressWarnings("deprecation")
        commander.Command.TouchMotion result = commander.Command.TouchMotion.valueOf(button1_);
        return result == null ? commander.Command.TouchMotion.UNRECOGNIZED : result;
      }
      /**
       * <code>.commander.TouchMotion button1 = 10;</code>
       * @param value The button1 to set.
       * @return This builder for chaining.
       */
      public Builder setButton1(commander.Command.TouchMotion value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        button1_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.commander.TouchMotion button1 = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearButton1() {
        
        button1_ = 0;
        onChanged();
        return this;
      }

      private int button2_ = 0;
      /**
       * <code>.commander.TouchMotion button2 = 11;</code>
       * @return The enum numeric value on the wire for button2.
       */
      @java.lang.Override public int getButton2Value() {
        return button2_;
      }
      /**
       * <code>.commander.TouchMotion button2 = 11;</code>
       * @param value The enum numeric value on the wire for button2 to set.
       * @return This builder for chaining.
       */
      public Builder setButton2Value(int value) {
        
        button2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.commander.TouchMotion button2 = 11;</code>
       * @return The button2.
       */
      @java.lang.Override
      public commander.Command.TouchMotion getButton2() {
        @SuppressWarnings("deprecation")
        commander.Command.TouchMotion result = commander.Command.TouchMotion.valueOf(button2_);
        return result == null ? commander.Command.TouchMotion.UNRECOGNIZED : result;
      }
      /**
       * <code>.commander.TouchMotion button2 = 11;</code>
       * @param value The button2 to set.
       * @return This builder for chaining.
       */
      public Builder setButton2(commander.Command.TouchMotion value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        button2_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.commander.TouchMotion button2 = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearButton2() {
        
        button2_ = 0;
        onChanged();
        return this;
      }

      private int tap_ = 0;
      /**
       * <code>.commander.TouchMotion tap = 12;</code>
       * @return The enum numeric value on the wire for tap.
       */
      @java.lang.Override public int getTapValue() {
        return tap_;
      }
      /**
       * <code>.commander.TouchMotion tap = 12;</code>
       * @param value The enum numeric value on the wire for tap to set.
       * @return This builder for chaining.
       */
      public Builder setTapValue(int value) {
        
        tap_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.commander.TouchMotion tap = 12;</code>
       * @return The tap.
       */
      @java.lang.Override
      public commander.Command.TouchMotion getTap() {
        @SuppressWarnings("deprecation")
        commander.Command.TouchMotion result = commander.Command.TouchMotion.valueOf(tap_);
        return result == null ? commander.Command.TouchMotion.UNRECOGNIZED : result;
      }
      /**
       * <code>.commander.TouchMotion tap = 12;</code>
       * @param value The tap to set.
       * @return This builder for chaining.
       */
      public Builder setTap(commander.Command.TouchMotion value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        tap_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.commander.TouchMotion tap = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearTap() {
        
        tap_ = 0;
        onChanged();
        return this;
      }

      private float tapMinMoveDistance_ ;
      /**
       * <code>float tapMinMoveDistance = 13;</code>
       * @return The tapMinMoveDistance.
       */
      @java.lang.Override
      public float getTapMinMoveDistance() {
        return tapMinMoveDistance_;
      }
      /**
       * <code>float tapMinMoveDistance = 13;</code>
       * @param value The tapMinMoveDistance to set.
       * @return This builder for chaining.
       */
      public Builder setTapMinMoveDistance(float value) {
        
        tapMinMoveDistance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float tapMinMoveDistance = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearTapMinMoveDistance() {
        
        tapMinMoveDistance_ = 0F;
        onChanged();
        return this;
      }

      private float distanceTrackingInternal_ ;
      /**
       * <code>float distanceTrackingInternal = 14;</code>
       * @return The distanceTrackingInternal.
       */
      @java.lang.Override
      public float getDistanceTrackingInternal() {
        return distanceTrackingInternal_;
      }
      /**
       * <code>float distanceTrackingInternal = 14;</code>
       * @param value The distanceTrackingInternal to set.
       * @return This builder for chaining.
       */
      public Builder setDistanceTrackingInternal(float value) {
        
        distanceTrackingInternal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float distanceTrackingInternal = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearDistanceTrackingInternal() {
        
        distanceTrackingInternal_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:commander.NStageInfo)
    }

    // @@protoc_insertion_point(class_scope:commander.NStageInfo)
    private static final commander.Command.NStageInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new commander.Command.NStageInfo();
    }

    public static commander.Command.NStageInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NStageInfo>
        PARSER = new com.google.protobuf.AbstractParser<NStageInfo>() {
      @java.lang.Override
      public NStageInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<NStageInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NStageInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public commander.Command.NStageInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CmdOrBuilder extends
      // @@protoc_insertion_point(interface_extends:commander.Cmd)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 sn = 1;</code>
     * @return The sn.
     */
    int getSn();

    /**
     * <code>repeated int32 ints = 2;</code>
     * @return A list containing the ints.
     */
    java.util.List<java.lang.Integer> getIntsList();
    /**
     * <code>repeated int32 ints = 2;</code>
     * @return The count of ints.
     */
    int getIntsCount();
    /**
     * <code>repeated int32 ints = 2;</code>
     * @param index The index of the element to return.
     * @return The ints at the given index.
     */
    int getInts(int index);

    /**
     * <code>repeated float floats = 3;</code>
     * @return A list containing the floats.
     */
    java.util.List<java.lang.Float> getFloatsList();
    /**
     * <code>repeated float floats = 3;</code>
     * @return The count of floats.
     */
    int getFloatsCount();
    /**
     * <code>repeated float floats = 3;</code>
     * @param index The index of the element to return.
     * @return The floats at the given index.
     */
    float getFloats(int index);

    /**
     * <code>repeated string strings = 4;</code>
     * @return A list containing the strings.
     */
    java.util.List<java.lang.String>
        getStringsList();
    /**
     * <code>repeated string strings = 4;</code>
     * @return The count of strings.
     */
    int getStringsCount();
    /**
     * <code>repeated string strings = 4;</code>
     * @param index The index of the element to return.
     * @return The strings at the given index.
     */
    java.lang.String getStrings(int index);
    /**
     * <code>repeated string strings = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the strings at the given index.
     */
    com.google.protobuf.ByteString
        getStringsBytes(int index);

    /**
     * <code>repeated bytes bytes = 5;</code>
     * @return A list containing the bytes.
     */
    java.util.List<com.google.protobuf.ByteString> getBytesList();
    /**
     * <code>repeated bytes bytes = 5;</code>
     * @return The count of bytes.
     */
    int getBytesCount();
    /**
     * <code>repeated bytes bytes = 5;</code>
     * @param index The index of the element to return.
     * @return The bytes at the given index.
     */
    com.google.protobuf.ByteString getBytes(int index);
  }
  /**
   * Protobuf type {@code commander.Cmd}
   */
  public static final class Cmd extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:commander.Cmd)
      CmdOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Cmd.newBuilder() to construct.
    private Cmd(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Cmd() {
      ints_ = emptyIntList();
      floats_ = emptyFloatList();
      strings_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bytes_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Cmd();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return commander.Command.internal_static_commander_Cmd_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return commander.Command.internal_static_commander_Cmd_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              commander.Command.Cmd.class, commander.Command.Cmd.Builder.class);
    }

    public static final int SN_FIELD_NUMBER = 1;
    private int sn_;
    /**
     * <code>uint32 sn = 1;</code>
     * @return The sn.
     */
    @java.lang.Override
    public int getSn() {
      return sn_;
    }

    public static final int INTS_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.IntList ints_;
    /**
     * <code>repeated int32 ints = 2;</code>
     * @return A list containing the ints.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getIntsList() {
      return ints_;
    }
    /**
     * <code>repeated int32 ints = 2;</code>
     * @return The count of ints.
     */
    public int getIntsCount() {
      return ints_.size();
    }
    /**
     * <code>repeated int32 ints = 2;</code>
     * @param index The index of the element to return.
     * @return The ints at the given index.
     */
    public int getInts(int index) {
      return ints_.getInt(index);
    }
    private int intsMemoizedSerializedSize = -1;

    public static final int FLOATS_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.FloatList floats_;
    /**
     * <code>repeated float floats = 3;</code>
     * @return A list containing the floats.
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getFloatsList() {
      return floats_;
    }
    /**
     * <code>repeated float floats = 3;</code>
     * @return The count of floats.
     */
    public int getFloatsCount() {
      return floats_.size();
    }
    /**
     * <code>repeated float floats = 3;</code>
     * @param index The index of the element to return.
     * @return The floats at the given index.
     */
    public float getFloats(int index) {
      return floats_.getFloat(index);
    }
    private int floatsMemoizedSerializedSize = -1;

    public static final int STRINGS_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList strings_;
    /**
     * <code>repeated string strings = 4;</code>
     * @return A list containing the strings.
     */
    public com.google.protobuf.ProtocolStringList
        getStringsList() {
      return strings_;
    }
    /**
     * <code>repeated string strings = 4;</code>
     * @return The count of strings.
     */
    public int getStringsCount() {
      return strings_.size();
    }
    /**
     * <code>repeated string strings = 4;</code>
     * @param index The index of the element to return.
     * @return The strings at the given index.
     */
    public java.lang.String getStrings(int index) {
      return strings_.get(index);
    }
    /**
     * <code>repeated string strings = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the strings at the given index.
     */
    public com.google.protobuf.ByteString
        getStringsBytes(int index) {
      return strings_.getByteString(index);
    }

    public static final int BYTES_FIELD_NUMBER = 5;
    private java.util.List<com.google.protobuf.ByteString> bytes_;
    /**
     * <code>repeated bytes bytes = 5;</code>
     * @return A list containing the bytes.
     */
    @java.lang.Override
    public java.util.List<com.google.protobuf.ByteString>
        getBytesList() {
      return bytes_;
    }
    /**
     * <code>repeated bytes bytes = 5;</code>
     * @return The count of bytes.
     */
    public int getBytesCount() {
      return bytes_.size();
    }
    /**
     * <code>repeated bytes bytes = 5;</code>
     * @param index The index of the element to return.
     * @return The bytes at the given index.
     */
    public com.google.protobuf.ByteString getBytes(int index) {
      return bytes_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (sn_ != 0) {
        output.writeUInt32(1, sn_);
      }
      if (getIntsList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(intsMemoizedSerializedSize);
      }
      for (int i = 0; i < ints_.size(); i++) {
        output.writeInt32NoTag(ints_.getInt(i));
      }
      if (getFloatsList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(floatsMemoizedSerializedSize);
      }
      for (int i = 0; i < floats_.size(); i++) {
        output.writeFloatNoTag(floats_.getFloat(i));
      }
      for (int i = 0; i < strings_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, strings_.getRaw(i));
      }
      for (int i = 0; i < bytes_.size(); i++) {
        output.writeBytes(5, bytes_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (sn_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, sn_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < ints_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(ints_.getInt(i));
        }
        size += dataSize;
        if (!getIntsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        intsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getFloatsList().size();
        size += dataSize;
        if (!getFloatsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        floatsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < strings_.size(); i++) {
          dataSize += computeStringSizeNoTag(strings_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getStringsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < bytes_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(bytes_.get(i));
        }
        size += dataSize;
        size += 1 * getBytesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof commander.Command.Cmd)) {
        return super.equals(obj);
      }
      commander.Command.Cmd other = (commander.Command.Cmd) obj;

      if (getSn()
          != other.getSn()) return false;
      if (!getIntsList()
          .equals(other.getIntsList())) return false;
      if (!getFloatsList()
          .equals(other.getFloatsList())) return false;
      if (!getStringsList()
          .equals(other.getStringsList())) return false;
      if (!getBytesList()
          .equals(other.getBytesList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SN_FIELD_NUMBER;
      hash = (53 * hash) + getSn();
      if (getIntsCount() > 0) {
        hash = (37 * hash) + INTS_FIELD_NUMBER;
        hash = (53 * hash) + getIntsList().hashCode();
      }
      if (getFloatsCount() > 0) {
        hash = (37 * hash) + FLOATS_FIELD_NUMBER;
        hash = (53 * hash) + getFloatsList().hashCode();
      }
      if (getStringsCount() > 0) {
        hash = (37 * hash) + STRINGS_FIELD_NUMBER;
        hash = (53 * hash) + getStringsList().hashCode();
      }
      if (getBytesCount() > 0) {
        hash = (37 * hash) + BYTES_FIELD_NUMBER;
        hash = (53 * hash) + getBytesList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static commander.Command.Cmd parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static commander.Command.Cmd parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static commander.Command.Cmd parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static commander.Command.Cmd parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static commander.Command.Cmd parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static commander.Command.Cmd parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static commander.Command.Cmd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static commander.Command.Cmd parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static commander.Command.Cmd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static commander.Command.Cmd parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static commander.Command.Cmd parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static commander.Command.Cmd parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(commander.Command.Cmd prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code commander.Cmd}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:commander.Cmd)
        commander.Command.CmdOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return commander.Command.internal_static_commander_Cmd_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return commander.Command.internal_static_commander_Cmd_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                commander.Command.Cmd.class, commander.Command.Cmd.Builder.class);
      }

      // Construct using commander.Command.Cmd.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        sn_ = 0;

        ints_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        floats_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000002);
        strings_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        bytes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return commander.Command.internal_static_commander_Cmd_descriptor;
      }

      @java.lang.Override
      public commander.Command.Cmd getDefaultInstanceForType() {
        return commander.Command.Cmd.getDefaultInstance();
      }

      @java.lang.Override
      public commander.Command.Cmd build() {
        commander.Command.Cmd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public commander.Command.Cmd buildPartial() {
        commander.Command.Cmd result = new commander.Command.Cmd(this);
        int from_bitField0_ = bitField0_;
        result.sn_ = sn_;
        if (((bitField0_ & 0x00000001) != 0)) {
          ints_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.ints_ = ints_;
        if (((bitField0_ & 0x00000002) != 0)) {
          floats_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.floats_ = floats_;
        if (((bitField0_ & 0x00000004) != 0)) {
          strings_ = strings_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.strings_ = strings_;
        if (((bitField0_ & 0x00000008) != 0)) {
          bytes_ = java.util.Collections.unmodifiableList(bytes_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.bytes_ = bytes_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof commander.Command.Cmd) {
          return mergeFrom((commander.Command.Cmd)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(commander.Command.Cmd other) {
        if (other == commander.Command.Cmd.getDefaultInstance()) return this;
        if (other.getSn() != 0) {
          setSn(other.getSn());
        }
        if (!other.ints_.isEmpty()) {
          if (ints_.isEmpty()) {
            ints_ = other.ints_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureIntsIsMutable();
            ints_.addAll(other.ints_);
          }
          onChanged();
        }
        if (!other.floats_.isEmpty()) {
          if (floats_.isEmpty()) {
            floats_ = other.floats_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureFloatsIsMutable();
            floats_.addAll(other.floats_);
          }
          onChanged();
        }
        if (!other.strings_.isEmpty()) {
          if (strings_.isEmpty()) {
            strings_ = other.strings_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureStringsIsMutable();
            strings_.addAll(other.strings_);
          }
          onChanged();
        }
        if (!other.bytes_.isEmpty()) {
          if (bytes_.isEmpty()) {
            bytes_ = other.bytes_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureBytesIsMutable();
            bytes_.addAll(other.bytes_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                sn_ = input.readUInt32();

                break;
              } // case 8
              case 16: {
                int v = input.readInt32();
                ensureIntsIsMutable();
                ints_.addInt(v);
                break;
              } // case 16
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureIntsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  ints_.addInt(input.readInt32());
                }
                input.popLimit(limit);
                break;
              } // case 18
              case 29: {
                float v = input.readFloat();
                ensureFloatsIsMutable();
                floats_.addFloat(v);
                break;
              } // case 29
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureFloatsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  floats_.addFloat(input.readFloat());
                }
                input.popLimit(limit);
                break;
              } // case 26
              case 34: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureStringsIsMutable();
                strings_.add(s);
                break;
              } // case 34
              case 42: {
                com.google.protobuf.ByteString v = input.readBytes();
                ensureBytesIsMutable();
                bytes_.add(v);
                break;
              } // case 42
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int sn_ ;
      /**
       * <code>uint32 sn = 1;</code>
       * @return The sn.
       */
      @java.lang.Override
      public int getSn() {
        return sn_;
      }
      /**
       * <code>uint32 sn = 1;</code>
       * @param value The sn to set.
       * @return This builder for chaining.
       */
      public Builder setSn(int value) {
        
        sn_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 sn = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSn() {
        
        sn_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList ints_ = emptyIntList();
      private void ensureIntsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          ints_ = mutableCopy(ints_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 ints = 2;</code>
       * @return A list containing the ints.
       */
      public java.util.List<java.lang.Integer>
          getIntsList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(ints_) : ints_;
      }
      /**
       * <code>repeated int32 ints = 2;</code>
       * @return The count of ints.
       */
      public int getIntsCount() {
        return ints_.size();
      }
      /**
       * <code>repeated int32 ints = 2;</code>
       * @param index The index of the element to return.
       * @return The ints at the given index.
       */
      public int getInts(int index) {
        return ints_.getInt(index);
      }
      /**
       * <code>repeated int32 ints = 2;</code>
       * @param index The index to set the value at.
       * @param value The ints to set.
       * @return This builder for chaining.
       */
      public Builder setInts(
          int index, int value) {
        ensureIntsIsMutable();
        ints_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ints = 2;</code>
       * @param value The ints to add.
       * @return This builder for chaining.
       */
      public Builder addInts(int value) {
        ensureIntsIsMutable();
        ints_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ints = 2;</code>
       * @param values The ints to add.
       * @return This builder for chaining.
       */
      public Builder addAllInts(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureIntsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, ints_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ints = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearInts() {
        ints_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.FloatList floats_ = emptyFloatList();
      private void ensureFloatsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          floats_ = mutableCopy(floats_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated float floats = 3;</code>
       * @return A list containing the floats.
       */
      public java.util.List<java.lang.Float>
          getFloatsList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(floats_) : floats_;
      }
      /**
       * <code>repeated float floats = 3;</code>
       * @return The count of floats.
       */
      public int getFloatsCount() {
        return floats_.size();
      }
      /**
       * <code>repeated float floats = 3;</code>
       * @param index The index of the element to return.
       * @return The floats at the given index.
       */
      public float getFloats(int index) {
        return floats_.getFloat(index);
      }
      /**
       * <code>repeated float floats = 3;</code>
       * @param index The index to set the value at.
       * @param value The floats to set.
       * @return This builder for chaining.
       */
      public Builder setFloats(
          int index, float value) {
        ensureFloatsIsMutable();
        floats_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float floats = 3;</code>
       * @param value The floats to add.
       * @return This builder for chaining.
       */
      public Builder addFloats(float value) {
        ensureFloatsIsMutable();
        floats_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float floats = 3;</code>
       * @param values The floats to add.
       * @return This builder for chaining.
       */
      public Builder addAllFloats(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureFloatsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, floats_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float floats = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearFloats() {
        floats_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList strings_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureStringsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          strings_ = new com.google.protobuf.LazyStringArrayList(strings_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated string strings = 4;</code>
       * @return A list containing the strings.
       */
      public com.google.protobuf.ProtocolStringList
          getStringsList() {
        return strings_.getUnmodifiableView();
      }
      /**
       * <code>repeated string strings = 4;</code>
       * @return The count of strings.
       */
      public int getStringsCount() {
        return strings_.size();
      }
      /**
       * <code>repeated string strings = 4;</code>
       * @param index The index of the element to return.
       * @return The strings at the given index.
       */
      public java.lang.String getStrings(int index) {
        return strings_.get(index);
      }
      /**
       * <code>repeated string strings = 4;</code>
       * @param index The index of the value to return.
       * @return The bytes of the strings at the given index.
       */
      public com.google.protobuf.ByteString
          getStringsBytes(int index) {
        return strings_.getByteString(index);
      }
      /**
       * <code>repeated string strings = 4;</code>
       * @param index The index to set the value at.
       * @param value The strings to set.
       * @return This builder for chaining.
       */
      public Builder setStrings(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStringsIsMutable();
        strings_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string strings = 4;</code>
       * @param value The strings to add.
       * @return This builder for chaining.
       */
      public Builder addStrings(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStringsIsMutable();
        strings_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string strings = 4;</code>
       * @param values The strings to add.
       * @return This builder for chaining.
       */
      public Builder addAllStrings(
          java.lang.Iterable<java.lang.String> values) {
        ensureStringsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, strings_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string strings = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearStrings() {
        strings_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string strings = 4;</code>
       * @param value The bytes of the strings to add.
       * @return This builder for chaining.
       */
      public Builder addStringsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureStringsIsMutable();
        strings_.add(value);
        onChanged();
        return this;
      }

      private java.util.List<com.google.protobuf.ByteString> bytes_ = java.util.Collections.emptyList();
      private void ensureBytesIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          bytes_ = new java.util.ArrayList<com.google.protobuf.ByteString>(bytes_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated bytes bytes = 5;</code>
       * @return A list containing the bytes.
       */
      public java.util.List<com.google.protobuf.ByteString>
          getBytesList() {
        return ((bitField0_ & 0x00000008) != 0) ?
                 java.util.Collections.unmodifiableList(bytes_) : bytes_;
      }
      /**
       * <code>repeated bytes bytes = 5;</code>
       * @return The count of bytes.
       */
      public int getBytesCount() {
        return bytes_.size();
      }
      /**
       * <code>repeated bytes bytes = 5;</code>
       * @param index The index of the element to return.
       * @return The bytes at the given index.
       */
      public com.google.protobuf.ByteString getBytes(int index) {
        return bytes_.get(index);
      }
      /**
       * <code>repeated bytes bytes = 5;</code>
       * @param index The index to set the value at.
       * @param value The bytes to set.
       * @return This builder for chaining.
       */
      public Builder setBytes(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureBytesIsMutable();
        bytes_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes bytes = 5;</code>
       * @param value The bytes to add.
       * @return This builder for chaining.
       */
      public Builder addBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureBytesIsMutable();
        bytes_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes bytes = 5;</code>
       * @param values The bytes to add.
       * @return This builder for chaining.
       */
      public Builder addAllBytes(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureBytesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, bytes_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes bytes = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearBytes() {
        bytes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:commander.Cmd)
    }

    // @@protoc_insertion_point(class_scope:commander.Cmd)
    private static final commander.Command.Cmd DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new commander.Command.Cmd();
    }

    public static commander.Command.Cmd getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Cmd>
        PARSER = new com.google.protobuf.AbstractParser<Cmd>() {
      @java.lang.Override
      public Cmd parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Cmd> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Cmd> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public commander.Command.Cmd getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NObjectOrBuilder extends
      // @@protoc_insertion_point(interface_extends:commander.NObject)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 sn = 1;</code>
     * @return The sn.
     */
    int getSn();

    /**
     * <code>int32 id = 2;</code>
     * @return The id.
     */
    int getId();

    /**
     * <code>optional .commander.NBody body = 3;</code>
     * @return Whether the body field is set.
     */
    boolean hasBody();
    /**
     * <code>optional .commander.NBody body = 3;</code>
     * @return The body.
     */
    commander.Command.NBody getBody();
    /**
     * <code>optional .commander.NBody body = 3;</code>
     */
    commander.Command.NBodyOrBuilder getBodyOrBuilder();

    /**
     * <code>optional .commander.NVisual visual = 4;</code>
     * @return Whether the visual field is set.
     */
    boolean hasVisual();
    /**
     * <code>optional .commander.NVisual visual = 4;</code>
     * @return The visual.
     */
    commander.Command.NVisual getVisual();
    /**
     * <code>optional .commander.NVisual visual = 4;</code>
     */
    commander.Command.NVisualOrBuilder getVisualOrBuilder();

    /**
     * <code>uint32 tid = 5;</code>
     * @return The tid.
     */
    int getTid();

    /**
     * <code>string info = 6;</code>
     * @return The info.
     */
    java.lang.String getInfo();
    /**
     * <code>string info = 6;</code>
     * @return The bytes for info.
     */
    com.google.protobuf.ByteString
        getInfoBytes();
  }
  /**
   * Protobuf type {@code commander.NObject}
   */
  public static final class NObject extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:commander.NObject)
      NObjectOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NObject.newBuilder() to construct.
    private NObject(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NObject() {
      info_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new NObject();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return commander.Command.internal_static_commander_NObject_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return commander.Command.internal_static_commander_NObject_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              commander.Command.NObject.class, commander.Command.NObject.Builder.class);
    }

    private int bitField0_;
    public static final int SN_FIELD_NUMBER = 1;
    private int sn_;
    /**
     * <code>uint32 sn = 1;</code>
     * @return The sn.
     */
    @java.lang.Override
    public int getSn() {
      return sn_;
    }

    public static final int ID_FIELD_NUMBER = 2;
    private int id_;
    /**
     * <code>int32 id = 2;</code>
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }

    public static final int BODY_FIELD_NUMBER = 3;
    private commander.Command.NBody body_;
    /**
     * <code>optional .commander.NBody body = 3;</code>
     * @return Whether the body field is set.
     */
    @java.lang.Override
    public boolean hasBody() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .commander.NBody body = 3;</code>
     * @return The body.
     */
    @java.lang.Override
    public commander.Command.NBody getBody() {
      return body_ == null ? commander.Command.NBody.getDefaultInstance() : body_;
    }
    /**
     * <code>optional .commander.NBody body = 3;</code>
     */
    @java.lang.Override
    public commander.Command.NBodyOrBuilder getBodyOrBuilder() {
      return body_ == null ? commander.Command.NBody.getDefaultInstance() : body_;
    }

    public static final int VISUAL_FIELD_NUMBER = 4;
    private commander.Command.NVisual visual_;
    /**
     * <code>optional .commander.NVisual visual = 4;</code>
     * @return Whether the visual field is set.
     */
    @java.lang.Override
    public boolean hasVisual() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .commander.NVisual visual = 4;</code>
     * @return The visual.
     */
    @java.lang.Override
    public commander.Command.NVisual getVisual() {
      return visual_ == null ? commander.Command.NVisual.getDefaultInstance() : visual_;
    }
    /**
     * <code>optional .commander.NVisual visual = 4;</code>
     */
    @java.lang.Override
    public commander.Command.NVisualOrBuilder getVisualOrBuilder() {
      return visual_ == null ? commander.Command.NVisual.getDefaultInstance() : visual_;
    }

    public static final int TID_FIELD_NUMBER = 5;
    private int tid_;
    /**
     * <code>uint32 tid = 5;</code>
     * @return The tid.
     */
    @java.lang.Override
    public int getTid() {
      return tid_;
    }

    public static final int INFO_FIELD_NUMBER = 6;
    private volatile java.lang.Object info_;
    /**
     * <code>string info = 6;</code>
     * @return The info.
     */
    @java.lang.Override
    public java.lang.String getInfo() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        info_ = s;
        return s;
      }
    }
    /**
     * <code>string info = 6;</code>
     * @return The bytes for info.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getInfoBytes() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        info_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (sn_ != 0) {
        output.writeUInt32(1, sn_);
      }
      if (id_ != 0) {
        output.writeInt32(2, id_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(3, getBody());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(4, getVisual());
      }
      if (tid_ != 0) {
        output.writeUInt32(5, tid_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(info_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, info_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (sn_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, sn_);
      }
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, id_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getBody());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getVisual());
      }
      if (tid_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, tid_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(info_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, info_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof commander.Command.NObject)) {
        return super.equals(obj);
      }
      commander.Command.NObject other = (commander.Command.NObject) obj;

      if (getSn()
          != other.getSn()) return false;
      if (getId()
          != other.getId()) return false;
      if (hasBody() != other.hasBody()) return false;
      if (hasBody()) {
        if (!getBody()
            .equals(other.getBody())) return false;
      }
      if (hasVisual() != other.hasVisual()) return false;
      if (hasVisual()) {
        if (!getVisual()
            .equals(other.getVisual())) return false;
      }
      if (getTid()
          != other.getTid()) return false;
      if (!getInfo()
          .equals(other.getInfo())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SN_FIELD_NUMBER;
      hash = (53 * hash) + getSn();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      if (hasBody()) {
        hash = (37 * hash) + BODY_FIELD_NUMBER;
        hash = (53 * hash) + getBody().hashCode();
      }
      if (hasVisual()) {
        hash = (37 * hash) + VISUAL_FIELD_NUMBER;
        hash = (53 * hash) + getVisual().hashCode();
      }
      hash = (37 * hash) + TID_FIELD_NUMBER;
      hash = (53 * hash) + getTid();
      hash = (37 * hash) + INFO_FIELD_NUMBER;
      hash = (53 * hash) + getInfo().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static commander.Command.NObject parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static commander.Command.NObject parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static commander.Command.NObject parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static commander.Command.NObject parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static commander.Command.NObject parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static commander.Command.NObject parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static commander.Command.NObject parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static commander.Command.NObject parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static commander.Command.NObject parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static commander.Command.NObject parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static commander.Command.NObject parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static commander.Command.NObject parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(commander.Command.NObject prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code commander.NObject}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:commander.NObject)
        commander.Command.NObjectOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return commander.Command.internal_static_commander_NObject_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return commander.Command.internal_static_commander_NObject_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                commander.Command.NObject.class, commander.Command.NObject.Builder.class);
      }

      // Construct using commander.Command.NObject.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getBodyFieldBuilder();
          getVisualFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        sn_ = 0;

        id_ = 0;

        if (bodyBuilder_ == null) {
          body_ = null;
        } else {
          bodyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (visualBuilder_ == null) {
          visual_ = null;
        } else {
          visualBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        tid_ = 0;

        info_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return commander.Command.internal_static_commander_NObject_descriptor;
      }

      @java.lang.Override
      public commander.Command.NObject getDefaultInstanceForType() {
        return commander.Command.NObject.getDefaultInstance();
      }

      @java.lang.Override
      public commander.Command.NObject build() {
        commander.Command.NObject result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public commander.Command.NObject buildPartial() {
        commander.Command.NObject result = new commander.Command.NObject(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.sn_ = sn_;
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          if (bodyBuilder_ == null) {
            result.body_ = body_;
          } else {
            result.body_ = bodyBuilder_.build();
          }
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          if (visualBuilder_ == null) {
            result.visual_ = visual_;
          } else {
            result.visual_ = visualBuilder_.build();
          }
          to_bitField0_ |= 0x00000002;
        }
        result.tid_ = tid_;
        result.info_ = info_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof commander.Command.NObject) {
          return mergeFrom((commander.Command.NObject)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(commander.Command.NObject other) {
        if (other == commander.Command.NObject.getDefaultInstance()) return this;
        if (other.getSn() != 0) {
          setSn(other.getSn());
        }
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (other.hasBody()) {
          mergeBody(other.getBody());
        }
        if (other.hasVisual()) {
          mergeVisual(other.getVisual());
        }
        if (other.getTid() != 0) {
          setTid(other.getTid());
        }
        if (!other.getInfo().isEmpty()) {
          info_ = other.info_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                sn_ = input.readUInt32();

                break;
              } // case 8
              case 16: {
                id_ = input.readInt32();

                break;
              } // case 16
              case 26: {
                input.readMessage(
                    getBodyFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getVisualFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 34
              case 40: {
                tid_ = input.readUInt32();

                break;
              } // case 40
              case 50: {
                info_ = input.readStringRequireUtf8();

                break;
              } // case 50
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int sn_ ;
      /**
       * <code>uint32 sn = 1;</code>
       * @return The sn.
       */
      @java.lang.Override
      public int getSn() {
        return sn_;
      }
      /**
       * <code>uint32 sn = 1;</code>
       * @param value The sn to set.
       * @return This builder for chaining.
       */
      public Builder setSn(int value) {
        
        sn_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 sn = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSn() {
        
        sn_ = 0;
        onChanged();
        return this;
      }

      private int id_ ;
      /**
       * <code>int32 id = 2;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }
      /**
       * <code>int32 id = 2;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = 0;
        onChanged();
        return this;
      }

      private commander.Command.NBody body_;
      private com.google.protobuf.SingleFieldBuilderV3<
          commander.Command.NBody, commander.Command.NBody.Builder, commander.Command.NBodyOrBuilder> bodyBuilder_;
      /**
       * <code>optional .commander.NBody body = 3;</code>
       * @return Whether the body field is set.
       */
      public boolean hasBody() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .commander.NBody body = 3;</code>
       * @return The body.
       */
      public commander.Command.NBody getBody() {
        if (bodyBuilder_ == null) {
          return body_ == null ? commander.Command.NBody.getDefaultInstance() : body_;
        } else {
          return bodyBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .commander.NBody body = 3;</code>
       */
      public Builder setBody(commander.Command.NBody value) {
        if (bodyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          body_ = value;
          onChanged();
        } else {
          bodyBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .commander.NBody body = 3;</code>
       */
      public Builder setBody(
          commander.Command.NBody.Builder builderForValue) {
        if (bodyBuilder_ == null) {
          body_ = builderForValue.build();
          onChanged();
        } else {
          bodyBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .commander.NBody body = 3;</code>
       */
      public Builder mergeBody(commander.Command.NBody value) {
        if (bodyBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
              body_ != null &&
              body_ != commander.Command.NBody.getDefaultInstance()) {
            body_ =
              commander.Command.NBody.newBuilder(body_).mergeFrom(value).buildPartial();
          } else {
            body_ = value;
          }
          onChanged();
        } else {
          bodyBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .commander.NBody body = 3;</code>
       */
      public Builder clearBody() {
        if (bodyBuilder_ == null) {
          body_ = null;
          onChanged();
        } else {
          bodyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .commander.NBody body = 3;</code>
       */
      public commander.Command.NBody.Builder getBodyBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getBodyFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .commander.NBody body = 3;</code>
       */
      public commander.Command.NBodyOrBuilder getBodyOrBuilder() {
        if (bodyBuilder_ != null) {
          return bodyBuilder_.getMessageOrBuilder();
        } else {
          return body_ == null ?
              commander.Command.NBody.getDefaultInstance() : body_;
        }
      }
      /**
       * <code>optional .commander.NBody body = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          commander.Command.NBody, commander.Command.NBody.Builder, commander.Command.NBodyOrBuilder> 
          getBodyFieldBuilder() {
        if (bodyBuilder_ == null) {
          bodyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              commander.Command.NBody, commander.Command.NBody.Builder, commander.Command.NBodyOrBuilder>(
                  getBody(),
                  getParentForChildren(),
                  isClean());
          body_ = null;
        }
        return bodyBuilder_;
      }

      private commander.Command.NVisual visual_;
      private com.google.protobuf.SingleFieldBuilderV3<
          commander.Command.NVisual, commander.Command.NVisual.Builder, commander.Command.NVisualOrBuilder> visualBuilder_;
      /**
       * <code>optional .commander.NVisual visual = 4;</code>
       * @return Whether the visual field is set.
       */
      public boolean hasVisual() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .commander.NVisual visual = 4;</code>
       * @return The visual.
       */
      public commander.Command.NVisual getVisual() {
        if (visualBuilder_ == null) {
          return visual_ == null ? commander.Command.NVisual.getDefaultInstance() : visual_;
        } else {
          return visualBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .commander.NVisual visual = 4;</code>
       */
      public Builder setVisual(commander.Command.NVisual value) {
        if (visualBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          visual_ = value;
          onChanged();
        } else {
          visualBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .commander.NVisual visual = 4;</code>
       */
      public Builder setVisual(
          commander.Command.NVisual.Builder builderForValue) {
        if (visualBuilder_ == null) {
          visual_ = builderForValue.build();
          onChanged();
        } else {
          visualBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .commander.NVisual visual = 4;</code>
       */
      public Builder mergeVisual(commander.Command.NVisual value) {
        if (visualBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
              visual_ != null &&
              visual_ != commander.Command.NVisual.getDefaultInstance()) {
            visual_ =
              commander.Command.NVisual.newBuilder(visual_).mergeFrom(value).buildPartial();
          } else {
            visual_ = value;
          }
          onChanged();
        } else {
          visualBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .commander.NVisual visual = 4;</code>
       */
      public Builder clearVisual() {
        if (visualBuilder_ == null) {
          visual_ = null;
          onChanged();
        } else {
          visualBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .commander.NVisual visual = 4;</code>
       */
      public commander.Command.NVisual.Builder getVisualBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getVisualFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .commander.NVisual visual = 4;</code>
       */
      public commander.Command.NVisualOrBuilder getVisualOrBuilder() {
        if (visualBuilder_ != null) {
          return visualBuilder_.getMessageOrBuilder();
        } else {
          return visual_ == null ?
              commander.Command.NVisual.getDefaultInstance() : visual_;
        }
      }
      /**
       * <code>optional .commander.NVisual visual = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          commander.Command.NVisual, commander.Command.NVisual.Builder, commander.Command.NVisualOrBuilder> 
          getVisualFieldBuilder() {
        if (visualBuilder_ == null) {
          visualBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              commander.Command.NVisual, commander.Command.NVisual.Builder, commander.Command.NVisualOrBuilder>(
                  getVisual(),
                  getParentForChildren(),
                  isClean());
          visual_ = null;
        }
        return visualBuilder_;
      }

      private int tid_ ;
      /**
       * <code>uint32 tid = 5;</code>
       * @return The tid.
       */
      @java.lang.Override
      public int getTid() {
        return tid_;
      }
      /**
       * <code>uint32 tid = 5;</code>
       * @param value The tid to set.
       * @return This builder for chaining.
       */
      public Builder setTid(int value) {
        
        tid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 tid = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearTid() {
        
        tid_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object info_ = "";
      /**
       * <code>string info = 6;</code>
       * @return The info.
       */
      public java.lang.String getInfo() {
        java.lang.Object ref = info_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          info_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string info = 6;</code>
       * @return The bytes for info.
       */
      public com.google.protobuf.ByteString
          getInfoBytes() {
        java.lang.Object ref = info_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          info_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string info = 6;</code>
       * @param value The info to set.
       * @return This builder for chaining.
       */
      public Builder setInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        info_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string info = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearInfo() {
        
        info_ = getDefaultInstance().getInfo();
        onChanged();
        return this;
      }
      /**
       * <code>string info = 6;</code>
       * @param value The bytes for info to set.
       * @return This builder for chaining.
       */
      public Builder setInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        info_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:commander.NObject)
    }

    // @@protoc_insertion_point(class_scope:commander.NObject)
    private static final commander.Command.NObject DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new commander.Command.NObject();
    }

    public static commander.Command.NObject getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NObject>
        PARSER = new com.google.protobuf.AbstractParser<NObject>() {
      @java.lang.Override
      public NObject parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<NObject> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NObject> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public commander.Command.NObject getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NVisualOrBuilder extends
      // @@protoc_insertion_point(interface_extends:commander.NVisual)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 priority = 1;</code>
     * @return The priority.
     */
    int getPriority();

    /**
     * <code>int32 current = 2;</code>
     * @return The current.
     */
    int getCurrent();

    /**
     * <code>float x = 3;</code>
     * @return The x.
     */
    float getX();

    /**
     * <code>float y = 4;</code>
     * @return The y.
     */
    float getY();

    /**
     * <code>float width = 5;</code>
     * @return The width.
     */
    float getWidth();

    /**
     * <code>float height = 6;</code>
     * @return The height.
     */
    float getHeight();

    /**
     * <code>float scaleX = 7;</code>
     * @return The scaleX.
     */
    float getScaleX();

    /**
     * <code>float scaleY = 8;</code>
     * @return The scaleY.
     */
    float getScaleY();

    /**
     * <code>float anchorX = 9;</code>
     * @return The anchorX.
     */
    float getAnchorX();

    /**
     * <code>float anchorY = 10;</code>
     * @return The anchorY.
     */
    float getAnchorY();

    /**
     * <code>repeated .commander.NClip clips = 11;</code>
     */
    java.util.List<commander.Command.NClip> 
        getClipsList();
    /**
     * <code>repeated .commander.NClip clips = 11;</code>
     */
    commander.Command.NClip getClips(int index);
    /**
     * <code>repeated .commander.NClip clips = 11;</code>
     */
    int getClipsCount();
    /**
     * <code>repeated .commander.NClip clips = 11;</code>
     */
    java.util.List<? extends commander.Command.NClipOrBuilder> 
        getClipsOrBuilderList();
    /**
     * <code>repeated .commander.NClip clips = 11;</code>
     */
    commander.Command.NClipOrBuilder getClipsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code commander.NVisual}
   */
  public static final class NVisual extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:commander.NVisual)
      NVisualOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NVisual.newBuilder() to construct.
    private NVisual(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NVisual() {
      clips_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new NVisual();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return commander.Command.internal_static_commander_NVisual_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return commander.Command.internal_static_commander_NVisual_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              commander.Command.NVisual.class, commander.Command.NVisual.Builder.class);
    }

    public static final int PRIORITY_FIELD_NUMBER = 1;
    private int priority_;
    /**
     * <code>int32 priority = 1;</code>
     * @return The priority.
     */
    @java.lang.Override
    public int getPriority() {
      return priority_;
    }

    public static final int CURRENT_FIELD_NUMBER = 2;
    private int current_;
    /**
     * <code>int32 current = 2;</code>
     * @return The current.
     */
    @java.lang.Override
    public int getCurrent() {
      return current_;
    }

    public static final int X_FIELD_NUMBER = 3;
    private float x_;
    /**
     * <code>float x = 3;</code>
     * @return The x.
     */
    @java.lang.Override
    public float getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 4;
    private float y_;
    /**
     * <code>float y = 4;</code>
     * @return The y.
     */
    @java.lang.Override
    public float getY() {
      return y_;
    }

    public static final int WIDTH_FIELD_NUMBER = 5;
    private float width_;
    /**
     * <code>float width = 5;</code>
     * @return The width.
     */
    @java.lang.Override
    public float getWidth() {
      return width_;
    }

    public static final int HEIGHT_FIELD_NUMBER = 6;
    private float height_;
    /**
     * <code>float height = 6;</code>
     * @return The height.
     */
    @java.lang.Override
    public float getHeight() {
      return height_;
    }

    public static final int SCALEX_FIELD_NUMBER = 7;
    private float scaleX_;
    /**
     * <code>float scaleX = 7;</code>
     * @return The scaleX.
     */
    @java.lang.Override
    public float getScaleX() {
      return scaleX_;
    }

    public static final int SCALEY_FIELD_NUMBER = 8;
    private float scaleY_;
    /**
     * <code>float scaleY = 8;</code>
     * @return The scaleY.
     */
    @java.lang.Override
    public float getScaleY() {
      return scaleY_;
    }

    public static final int ANCHORX_FIELD_NUMBER = 9;
    private float anchorX_;
    /**
     * <code>float anchorX = 9;</code>
     * @return The anchorX.
     */
    @java.lang.Override
    public float getAnchorX() {
      return anchorX_;
    }

    public static final int ANCHORY_FIELD_NUMBER = 10;
    private float anchorY_;
    /**
     * <code>float anchorY = 10;</code>
     * @return The anchorY.
     */
    @java.lang.Override
    public float getAnchorY() {
      return anchorY_;
    }

    public static final int CLIPS_FIELD_NUMBER = 11;
    private java.util.List<commander.Command.NClip> clips_;
    /**
     * <code>repeated .commander.NClip clips = 11;</code>
     */
    @java.lang.Override
    public java.util.List<commander.Command.NClip> getClipsList() {
      return clips_;
    }
    /**
     * <code>repeated .commander.NClip clips = 11;</code>
     */
    @java.lang.Override
    public java.util.List<? extends commander.Command.NClipOrBuilder> 
        getClipsOrBuilderList() {
      return clips_;
    }
    /**
     * <code>repeated .commander.NClip clips = 11;</code>
     */
    @java.lang.Override
    public int getClipsCount() {
      return clips_.size();
    }
    /**
     * <code>repeated .commander.NClip clips = 11;</code>
     */
    @java.lang.Override
    public commander.Command.NClip getClips(int index) {
      return clips_.get(index);
    }
    /**
     * <code>repeated .commander.NClip clips = 11;</code>
     */
    @java.lang.Override
    public commander.Command.NClipOrBuilder getClipsOrBuilder(
        int index) {
      return clips_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (priority_ != 0) {
        output.writeInt32(1, priority_);
      }
      if (current_ != 0) {
        output.writeInt32(2, current_);
      }
      if (java.lang.Float.floatToRawIntBits(x_) != 0) {
        output.writeFloat(3, x_);
      }
      if (java.lang.Float.floatToRawIntBits(y_) != 0) {
        output.writeFloat(4, y_);
      }
      if (java.lang.Float.floatToRawIntBits(width_) != 0) {
        output.writeFloat(5, width_);
      }
      if (java.lang.Float.floatToRawIntBits(height_) != 0) {
        output.writeFloat(6, height_);
      }
      if (java.lang.Float.floatToRawIntBits(scaleX_) != 0) {
        output.writeFloat(7, scaleX_);
      }
      if (java.lang.Float.floatToRawIntBits(scaleY_) != 0) {
        output.writeFloat(8, scaleY_);
      }
      if (java.lang.Float.floatToRawIntBits(anchorX_) != 0) {
        output.writeFloat(9, anchorX_);
      }
      if (java.lang.Float.floatToRawIntBits(anchorY_) != 0) {
        output.writeFloat(10, anchorY_);
      }
      for (int i = 0; i < clips_.size(); i++) {
        output.writeMessage(11, clips_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (priority_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, priority_);
      }
      if (current_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, current_);
      }
      if (java.lang.Float.floatToRawIntBits(x_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, x_);
      }
      if (java.lang.Float.floatToRawIntBits(y_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, y_);
      }
      if (java.lang.Float.floatToRawIntBits(width_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, width_);
      }
      if (java.lang.Float.floatToRawIntBits(height_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, height_);
      }
      if (java.lang.Float.floatToRawIntBits(scaleX_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, scaleX_);
      }
      if (java.lang.Float.floatToRawIntBits(scaleY_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, scaleY_);
      }
      if (java.lang.Float.floatToRawIntBits(anchorX_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, anchorX_);
      }
      if (java.lang.Float.floatToRawIntBits(anchorY_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, anchorY_);
      }
      for (int i = 0; i < clips_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, clips_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof commander.Command.NVisual)) {
        return super.equals(obj);
      }
      commander.Command.NVisual other = (commander.Command.NVisual) obj;

      if (getPriority()
          != other.getPriority()) return false;
      if (getCurrent()
          != other.getCurrent()) return false;
      if (java.lang.Float.floatToIntBits(getX())
          != java.lang.Float.floatToIntBits(
              other.getX())) return false;
      if (java.lang.Float.floatToIntBits(getY())
          != java.lang.Float.floatToIntBits(
              other.getY())) return false;
      if (java.lang.Float.floatToIntBits(getWidth())
          != java.lang.Float.floatToIntBits(
              other.getWidth())) return false;
      if (java.lang.Float.floatToIntBits(getHeight())
          != java.lang.Float.floatToIntBits(
              other.getHeight())) return false;
      if (java.lang.Float.floatToIntBits(getScaleX())
          != java.lang.Float.floatToIntBits(
              other.getScaleX())) return false;
      if (java.lang.Float.floatToIntBits(getScaleY())
          != java.lang.Float.floatToIntBits(
              other.getScaleY())) return false;
      if (java.lang.Float.floatToIntBits(getAnchorX())
          != java.lang.Float.floatToIntBits(
              other.getAnchorX())) return false;
      if (java.lang.Float.floatToIntBits(getAnchorY())
          != java.lang.Float.floatToIntBits(
              other.getAnchorY())) return false;
      if (!getClipsList()
          .equals(other.getClipsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PRIORITY_FIELD_NUMBER;
      hash = (53 * hash) + getPriority();
      hash = (37 * hash) + CURRENT_FIELD_NUMBER;
      hash = (53 * hash) + getCurrent();
      hash = (37 * hash) + X_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getX());
      hash = (37 * hash) + Y_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getY());
      hash = (37 * hash) + WIDTH_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getWidth());
      hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getHeight());
      hash = (37 * hash) + SCALEX_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getScaleX());
      hash = (37 * hash) + SCALEY_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getScaleY());
      hash = (37 * hash) + ANCHORX_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getAnchorX());
      hash = (37 * hash) + ANCHORY_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getAnchorY());
      if (getClipsCount() > 0) {
        hash = (37 * hash) + CLIPS_FIELD_NUMBER;
        hash = (53 * hash) + getClipsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static commander.Command.NVisual parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static commander.Command.NVisual parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static commander.Command.NVisual parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static commander.Command.NVisual parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static commander.Command.NVisual parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static commander.Command.NVisual parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static commander.Command.NVisual parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static commander.Command.NVisual parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static commander.Command.NVisual parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static commander.Command.NVisual parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static commander.Command.NVisual parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static commander.Command.NVisual parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(commander.Command.NVisual prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code commander.NVisual}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:commander.NVisual)
        commander.Command.NVisualOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return commander.Command.internal_static_commander_NVisual_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return commander.Command.internal_static_commander_NVisual_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                commander.Command.NVisual.class, commander.Command.NVisual.Builder.class);
      }

      // Construct using commander.Command.NVisual.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        priority_ = 0;

        current_ = 0;

        x_ = 0F;

        y_ = 0F;

        width_ = 0F;

        height_ = 0F;

        scaleX_ = 0F;

        scaleY_ = 0F;

        anchorX_ = 0F;

        anchorY_ = 0F;

        if (clipsBuilder_ == null) {
          clips_ = java.util.Collections.emptyList();
        } else {
          clips_ = null;
          clipsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return commander.Command.internal_static_commander_NVisual_descriptor;
      }

      @java.lang.Override
      public commander.Command.NVisual getDefaultInstanceForType() {
        return commander.Command.NVisual.getDefaultInstance();
      }

      @java.lang.Override
      public commander.Command.NVisual build() {
        commander.Command.NVisual result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public commander.Command.NVisual buildPartial() {
        commander.Command.NVisual result = new commander.Command.NVisual(this);
        int from_bitField0_ = bitField0_;
        result.priority_ = priority_;
        result.current_ = current_;
        result.x_ = x_;
        result.y_ = y_;
        result.width_ = width_;
        result.height_ = height_;
        result.scaleX_ = scaleX_;
        result.scaleY_ = scaleY_;
        result.anchorX_ = anchorX_;
        result.anchorY_ = anchorY_;
        if (clipsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            clips_ = java.util.Collections.unmodifiableList(clips_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.clips_ = clips_;
        } else {
          result.clips_ = clipsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof commander.Command.NVisual) {
          return mergeFrom((commander.Command.NVisual)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(commander.Command.NVisual other) {
        if (other == commander.Command.NVisual.getDefaultInstance()) return this;
        if (other.getPriority() != 0) {
          setPriority(other.getPriority());
        }
        if (other.getCurrent() != 0) {
          setCurrent(other.getCurrent());
        }
        if (other.getX() != 0F) {
          setX(other.getX());
        }
        if (other.getY() != 0F) {
          setY(other.getY());
        }
        if (other.getWidth() != 0F) {
          setWidth(other.getWidth());
        }
        if (other.getHeight() != 0F) {
          setHeight(other.getHeight());
        }
        if (other.getScaleX() != 0F) {
          setScaleX(other.getScaleX());
        }
        if (other.getScaleY() != 0F) {
          setScaleY(other.getScaleY());
        }
        if (other.getAnchorX() != 0F) {
          setAnchorX(other.getAnchorX());
        }
        if (other.getAnchorY() != 0F) {
          setAnchorY(other.getAnchorY());
        }
        if (clipsBuilder_ == null) {
          if (!other.clips_.isEmpty()) {
            if (clips_.isEmpty()) {
              clips_ = other.clips_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureClipsIsMutable();
              clips_.addAll(other.clips_);
            }
            onChanged();
          }
        } else {
          if (!other.clips_.isEmpty()) {
            if (clipsBuilder_.isEmpty()) {
              clipsBuilder_.dispose();
              clipsBuilder_ = null;
              clips_ = other.clips_;
              bitField0_ = (bitField0_ & ~0x00000001);
              clipsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getClipsFieldBuilder() : null;
            } else {
              clipsBuilder_.addAllMessages(other.clips_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                priority_ = input.readInt32();

                break;
              } // case 8
              case 16: {
                current_ = input.readInt32();

                break;
              } // case 16
              case 29: {
                x_ = input.readFloat();

                break;
              } // case 29
              case 37: {
                y_ = input.readFloat();

                break;
              } // case 37
              case 45: {
                width_ = input.readFloat();

                break;
              } // case 45
              case 53: {
                height_ = input.readFloat();

                break;
              } // case 53
              case 61: {
                scaleX_ = input.readFloat();

                break;
              } // case 61
              case 69: {
                scaleY_ = input.readFloat();

                break;
              } // case 69
              case 77: {
                anchorX_ = input.readFloat();

                break;
              } // case 77
              case 85: {
                anchorY_ = input.readFloat();

                break;
              } // case 85
              case 90: {
                commander.Command.NClip m =
                    input.readMessage(
                        commander.Command.NClip.parser(),
                        extensionRegistry);
                if (clipsBuilder_ == null) {
                  ensureClipsIsMutable();
                  clips_.add(m);
                } else {
                  clipsBuilder_.addMessage(m);
                }
                break;
              } // case 90
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int priority_ ;
      /**
       * <code>int32 priority = 1;</code>
       * @return The priority.
       */
      @java.lang.Override
      public int getPriority() {
        return priority_;
      }
      /**
       * <code>int32 priority = 1;</code>
       * @param value The priority to set.
       * @return This builder for chaining.
       */
      public Builder setPriority(int value) {
        
        priority_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 priority = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPriority() {
        
        priority_ = 0;
        onChanged();
        return this;
      }

      private int current_ ;
      /**
       * <code>int32 current = 2;</code>
       * @return The current.
       */
      @java.lang.Override
      public int getCurrent() {
        return current_;
      }
      /**
       * <code>int32 current = 2;</code>
       * @param value The current to set.
       * @return This builder for chaining.
       */
      public Builder setCurrent(int value) {
        
        current_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 current = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurrent() {
        
        current_ = 0;
        onChanged();
        return this;
      }

      private float x_ ;
      /**
       * <code>float x = 3;</code>
       * @return The x.
       */
      @java.lang.Override
      public float getX() {
        return x_;
      }
      /**
       * <code>float x = 3;</code>
       * @param value The x to set.
       * @return This builder for chaining.
       */
      public Builder setX(float value) {
        
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float x = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearX() {
        
        x_ = 0F;
        onChanged();
        return this;
      }

      private float y_ ;
      /**
       * <code>float y = 4;</code>
       * @return The y.
       */
      @java.lang.Override
      public float getY() {
        return y_;
      }
      /**
       * <code>float y = 4;</code>
       * @param value The y to set.
       * @return This builder for chaining.
       */
      public Builder setY(float value) {
        
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float y = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearY() {
        
        y_ = 0F;
        onChanged();
        return this;
      }

      private float width_ ;
      /**
       * <code>float width = 5;</code>
       * @return The width.
       */
      @java.lang.Override
      public float getWidth() {
        return width_;
      }
      /**
       * <code>float width = 5;</code>
       * @param value The width to set.
       * @return This builder for chaining.
       */
      public Builder setWidth(float value) {
        
        width_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float width = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearWidth() {
        
        width_ = 0F;
        onChanged();
        return this;
      }

      private float height_ ;
      /**
       * <code>float height = 6;</code>
       * @return The height.
       */
      @java.lang.Override
      public float getHeight() {
        return height_;
      }
      /**
       * <code>float height = 6;</code>
       * @param value The height to set.
       * @return This builder for chaining.
       */
      public Builder setHeight(float value) {
        
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float height = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeight() {
        
        height_ = 0F;
        onChanged();
        return this;
      }

      private float scaleX_ ;
      /**
       * <code>float scaleX = 7;</code>
       * @return The scaleX.
       */
      @java.lang.Override
      public float getScaleX() {
        return scaleX_;
      }
      /**
       * <code>float scaleX = 7;</code>
       * @param value The scaleX to set.
       * @return This builder for chaining.
       */
      public Builder setScaleX(float value) {
        
        scaleX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float scaleX = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearScaleX() {
        
        scaleX_ = 0F;
        onChanged();
        return this;
      }

      private float scaleY_ ;
      /**
       * <code>float scaleY = 8;</code>
       * @return The scaleY.
       */
      @java.lang.Override
      public float getScaleY() {
        return scaleY_;
      }
      /**
       * <code>float scaleY = 8;</code>
       * @param value The scaleY to set.
       * @return This builder for chaining.
       */
      public Builder setScaleY(float value) {
        
        scaleY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float scaleY = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearScaleY() {
        
        scaleY_ = 0F;
        onChanged();
        return this;
      }

      private float anchorX_ ;
      /**
       * <code>float anchorX = 9;</code>
       * @return The anchorX.
       */
      @java.lang.Override
      public float getAnchorX() {
        return anchorX_;
      }
      /**
       * <code>float anchorX = 9;</code>
       * @param value The anchorX to set.
       * @return This builder for chaining.
       */
      public Builder setAnchorX(float value) {
        
        anchorX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float anchorX = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearAnchorX() {
        
        anchorX_ = 0F;
        onChanged();
        return this;
      }

      private float anchorY_ ;
      /**
       * <code>float anchorY = 10;</code>
       * @return The anchorY.
       */
      @java.lang.Override
      public float getAnchorY() {
        return anchorY_;
      }
      /**
       * <code>float anchorY = 10;</code>
       * @param value The anchorY to set.
       * @return This builder for chaining.
       */
      public Builder setAnchorY(float value) {
        
        anchorY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float anchorY = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearAnchorY() {
        
        anchorY_ = 0F;
        onChanged();
        return this;
      }

      private java.util.List<commander.Command.NClip> clips_ =
        java.util.Collections.emptyList();
      private void ensureClipsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          clips_ = new java.util.ArrayList<commander.Command.NClip>(clips_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          commander.Command.NClip, commander.Command.NClip.Builder, commander.Command.NClipOrBuilder> clipsBuilder_;

      /**
       * <code>repeated .commander.NClip clips = 11;</code>
       */
      public java.util.List<commander.Command.NClip> getClipsList() {
        if (clipsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(clips_);
        } else {
          return clipsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .commander.NClip clips = 11;</code>
       */
      public int getClipsCount() {
        if (clipsBuilder_ == null) {
          return clips_.size();
        } else {
          return clipsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .commander.NClip clips = 11;</code>
       */
      public commander.Command.NClip getClips(int index) {
        if (clipsBuilder_ == null) {
          return clips_.get(index);
        } else {
          return clipsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .commander.NClip clips = 11;</code>
       */
      public Builder setClips(
          int index, commander.Command.NClip value) {
        if (clipsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClipsIsMutable();
          clips_.set(index, value);
          onChanged();
        } else {
          clipsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .commander.NClip clips = 11;</code>
       */
      public Builder setClips(
          int index, commander.Command.NClip.Builder builderForValue) {
        if (clipsBuilder_ == null) {
          ensureClipsIsMutable();
          clips_.set(index, builderForValue.build());
          onChanged();
        } else {
          clipsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .commander.NClip clips = 11;</code>
       */
      public Builder addClips(commander.Command.NClip value) {
        if (clipsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClipsIsMutable();
          clips_.add(value);
          onChanged();
        } else {
          clipsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .commander.NClip clips = 11;</code>
       */
      public Builder addClips(
          int index, commander.Command.NClip value) {
        if (clipsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClipsIsMutable();
          clips_.add(index, value);
          onChanged();
        } else {
          clipsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .commander.NClip clips = 11;</code>
       */
      public Builder addClips(
          commander.Command.NClip.Builder builderForValue) {
        if (clipsBuilder_ == null) {
          ensureClipsIsMutable();
          clips_.add(builderForValue.build());
          onChanged();
        } else {
          clipsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .commander.NClip clips = 11;</code>
       */
      public Builder addClips(
          int index, commander.Command.NClip.Builder builderForValue) {
        if (clipsBuilder_ == null) {
          ensureClipsIsMutable();
          clips_.add(index, builderForValue.build());
          onChanged();
        } else {
          clipsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .commander.NClip clips = 11;</code>
       */
      public Builder addAllClips(
          java.lang.Iterable<? extends commander.Command.NClip> values) {
        if (clipsBuilder_ == null) {
          ensureClipsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, clips_);
          onChanged();
        } else {
          clipsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .commander.NClip clips = 11;</code>
       */
      public Builder clearClips() {
        if (clipsBuilder_ == null) {
          clips_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          clipsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .commander.NClip clips = 11;</code>
       */
      public Builder removeClips(int index) {
        if (clipsBuilder_ == null) {
          ensureClipsIsMutable();
          clips_.remove(index);
          onChanged();
        } else {
          clipsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .commander.NClip clips = 11;</code>
       */
      public commander.Command.NClip.Builder getClipsBuilder(
          int index) {
        return getClipsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .commander.NClip clips = 11;</code>
       */
      public commander.Command.NClipOrBuilder getClipsOrBuilder(
          int index) {
        if (clipsBuilder_ == null) {
          return clips_.get(index);  } else {
          return clipsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .commander.NClip clips = 11;</code>
       */
      public java.util.List<? extends commander.Command.NClipOrBuilder> 
           getClipsOrBuilderList() {
        if (clipsBuilder_ != null) {
          return clipsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(clips_);
        }
      }
      /**
       * <code>repeated .commander.NClip clips = 11;</code>
       */
      public commander.Command.NClip.Builder addClipsBuilder() {
        return getClipsFieldBuilder().addBuilder(
            commander.Command.NClip.getDefaultInstance());
      }
      /**
       * <code>repeated .commander.NClip clips = 11;</code>
       */
      public commander.Command.NClip.Builder addClipsBuilder(
          int index) {
        return getClipsFieldBuilder().addBuilder(
            index, commander.Command.NClip.getDefaultInstance());
      }
      /**
       * <code>repeated .commander.NClip clips = 11;</code>
       */
      public java.util.List<commander.Command.NClip.Builder> 
           getClipsBuilderList() {
        return getClipsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          commander.Command.NClip, commander.Command.NClip.Builder, commander.Command.NClipOrBuilder> 
          getClipsFieldBuilder() {
        if (clipsBuilder_ == null) {
          clipsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              commander.Command.NClip, commander.Command.NClip.Builder, commander.Command.NClipOrBuilder>(
                  clips_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          clips_ = null;
        }
        return clipsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:commander.NVisual)
    }

    // @@protoc_insertion_point(class_scope:commander.NVisual)
    private static final commander.Command.NVisual DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new commander.Command.NVisual();
    }

    public static commander.Command.NVisual getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NVisual>
        PARSER = new com.google.protobuf.AbstractParser<NVisual>() {
      @java.lang.Override
      public NVisual parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<NVisual> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NVisual> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public commander.Command.NVisual getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NClipOrBuilder extends
      // @@protoc_insertion_point(interface_extends:commander.NClip)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string data = 1;</code>
     * @return The data.
     */
    java.lang.String getData();
    /**
     * <code>string data = 1;</code>
     * @return The bytes for data.
     */
    com.google.protobuf.ByteString
        getDataBytes();

    /**
     * <code>float x = 2;</code>
     * @return The x.
     */
    float getX();

    /**
     * <code>float y = 3;</code>
     * @return The y.
     */
    float getY();

    /**
     * <code>float width = 4;</code>
     * @return The width.
     */
    float getWidth();

    /**
     * <code>float height = 5;</code>
     * @return The height.
     */
    float getHeight();

    /**
     * <code>float stepTime = 6;</code>
     * @return The stepTime.
     */
    float getStepTime();

    /**
     * <code>.commander.NClipType type = 7;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <code>.commander.NClipType type = 7;</code>
     * @return The type.
     */
    commander.Command.NClipType getType();

    /**
     * <code>repeated uint32 indices = 8;</code>
     * @return A list containing the indices.
     */
    java.util.List<java.lang.Integer> getIndicesList();
    /**
     * <code>repeated uint32 indices = 8;</code>
     * @return The count of indices.
     */
    int getIndicesCount();
    /**
     * <code>repeated uint32 indices = 8;</code>
     * @param index The index of the element to return.
     * @return The indices at the given index.
     */
    int getIndices(int index);
  }
  /**
   * Protobuf type {@code commander.NClip}
   */
  public static final class NClip extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:commander.NClip)
      NClipOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NClip.newBuilder() to construct.
    private NClip(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NClip() {
      data_ = "";
      type_ = 0;
      indices_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new NClip();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return commander.Command.internal_static_commander_NClip_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return commander.Command.internal_static_commander_NClip_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              commander.Command.NClip.class, commander.Command.NClip.Builder.class);
    }

    public static final int DATA_FIELD_NUMBER = 1;
    private volatile java.lang.Object data_;
    /**
     * <code>string data = 1;</code>
     * @return The data.
     */
    @java.lang.Override
    public java.lang.String getData() {
      java.lang.Object ref = data_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        data_ = s;
        return s;
      }
    }
    /**
     * <code>string data = 1;</code>
     * @return The bytes for data.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDataBytes() {
      java.lang.Object ref = data_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        data_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int X_FIELD_NUMBER = 2;
    private float x_;
    /**
     * <code>float x = 2;</code>
     * @return The x.
     */
    @java.lang.Override
    public float getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 3;
    private float y_;
    /**
     * <code>float y = 3;</code>
     * @return The y.
     */
    @java.lang.Override
    public float getY() {
      return y_;
    }

    public static final int WIDTH_FIELD_NUMBER = 4;
    private float width_;
    /**
     * <code>float width = 4;</code>
     * @return The width.
     */
    @java.lang.Override
    public float getWidth() {
      return width_;
    }

    public static final int HEIGHT_FIELD_NUMBER = 5;
    private float height_;
    /**
     * <code>float height = 5;</code>
     * @return The height.
     */
    @java.lang.Override
    public float getHeight() {
      return height_;
    }

    public static final int STEPTIME_FIELD_NUMBER = 6;
    private float stepTime_;
    /**
     * <code>float stepTime = 6;</code>
     * @return The stepTime.
     */
    @java.lang.Override
    public float getStepTime() {
      return stepTime_;
    }

    public static final int TYPE_FIELD_NUMBER = 7;
    private int type_;
    /**
     * <code>.commander.NClipType type = 7;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.commander.NClipType type = 7;</code>
     * @return The type.
     */
    @java.lang.Override public commander.Command.NClipType getType() {
      @SuppressWarnings("deprecation")
      commander.Command.NClipType result = commander.Command.NClipType.valueOf(type_);
      return result == null ? commander.Command.NClipType.UNRECOGNIZED : result;
    }

    public static final int INDICES_FIELD_NUMBER = 8;
    private com.google.protobuf.Internal.IntList indices_;
    /**
     * <code>repeated uint32 indices = 8;</code>
     * @return A list containing the indices.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getIndicesList() {
      return indices_;
    }
    /**
     * <code>repeated uint32 indices = 8;</code>
     * @return The count of indices.
     */
    public int getIndicesCount() {
      return indices_.size();
    }
    /**
     * <code>repeated uint32 indices = 8;</code>
     * @param index The index of the element to return.
     * @return The indices at the given index.
     */
    public int getIndices(int index) {
      return indices_.getInt(index);
    }
    private int indicesMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(data_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, data_);
      }
      if (java.lang.Float.floatToRawIntBits(x_) != 0) {
        output.writeFloat(2, x_);
      }
      if (java.lang.Float.floatToRawIntBits(y_) != 0) {
        output.writeFloat(3, y_);
      }
      if (java.lang.Float.floatToRawIntBits(width_) != 0) {
        output.writeFloat(4, width_);
      }
      if (java.lang.Float.floatToRawIntBits(height_) != 0) {
        output.writeFloat(5, height_);
      }
      if (java.lang.Float.floatToRawIntBits(stepTime_) != 0) {
        output.writeFloat(6, stepTime_);
      }
      if (type_ != commander.Command.NClipType.loop.getNumber()) {
        output.writeEnum(7, type_);
      }
      if (getIndicesList().size() > 0) {
        output.writeUInt32NoTag(66);
        output.writeUInt32NoTag(indicesMemoizedSerializedSize);
      }
      for (int i = 0; i < indices_.size(); i++) {
        output.writeUInt32NoTag(indices_.getInt(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(data_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, data_);
      }
      if (java.lang.Float.floatToRawIntBits(x_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, x_);
      }
      if (java.lang.Float.floatToRawIntBits(y_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, y_);
      }
      if (java.lang.Float.floatToRawIntBits(width_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, width_);
      }
      if (java.lang.Float.floatToRawIntBits(height_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, height_);
      }
      if (java.lang.Float.floatToRawIntBits(stepTime_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, stepTime_);
      }
      if (type_ != commander.Command.NClipType.loop.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, type_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < indices_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(indices_.getInt(i));
        }
        size += dataSize;
        if (!getIndicesList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        indicesMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof commander.Command.NClip)) {
        return super.equals(obj);
      }
      commander.Command.NClip other = (commander.Command.NClip) obj;

      if (!getData()
          .equals(other.getData())) return false;
      if (java.lang.Float.floatToIntBits(getX())
          != java.lang.Float.floatToIntBits(
              other.getX())) return false;
      if (java.lang.Float.floatToIntBits(getY())
          != java.lang.Float.floatToIntBits(
              other.getY())) return false;
      if (java.lang.Float.floatToIntBits(getWidth())
          != java.lang.Float.floatToIntBits(
              other.getWidth())) return false;
      if (java.lang.Float.floatToIntBits(getHeight())
          != java.lang.Float.floatToIntBits(
              other.getHeight())) return false;
      if (java.lang.Float.floatToIntBits(getStepTime())
          != java.lang.Float.floatToIntBits(
              other.getStepTime())) return false;
      if (type_ != other.type_) return false;
      if (!getIndicesList()
          .equals(other.getIndicesList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      hash = (37 * hash) + X_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getX());
      hash = (37 * hash) + Y_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getY());
      hash = (37 * hash) + WIDTH_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getWidth());
      hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getHeight());
      hash = (37 * hash) + STEPTIME_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getStepTime());
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      if (getIndicesCount() > 0) {
        hash = (37 * hash) + INDICES_FIELD_NUMBER;
        hash = (53 * hash) + getIndicesList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static commander.Command.NClip parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static commander.Command.NClip parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static commander.Command.NClip parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static commander.Command.NClip parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static commander.Command.NClip parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static commander.Command.NClip parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static commander.Command.NClip parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static commander.Command.NClip parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static commander.Command.NClip parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static commander.Command.NClip parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static commander.Command.NClip parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static commander.Command.NClip parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(commander.Command.NClip prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code commander.NClip}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:commander.NClip)
        commander.Command.NClipOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return commander.Command.internal_static_commander_NClip_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return commander.Command.internal_static_commander_NClip_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                commander.Command.NClip.class, commander.Command.NClip.Builder.class);
      }

      // Construct using commander.Command.NClip.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        data_ = "";

        x_ = 0F;

        y_ = 0F;

        width_ = 0F;

        height_ = 0F;

        stepTime_ = 0F;

        type_ = 0;

        indices_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return commander.Command.internal_static_commander_NClip_descriptor;
      }

      @java.lang.Override
      public commander.Command.NClip getDefaultInstanceForType() {
        return commander.Command.NClip.getDefaultInstance();
      }

      @java.lang.Override
      public commander.Command.NClip build() {
        commander.Command.NClip result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public commander.Command.NClip buildPartial() {
        commander.Command.NClip result = new commander.Command.NClip(this);
        int from_bitField0_ = bitField0_;
        result.data_ = data_;
        result.x_ = x_;
        result.y_ = y_;
        result.width_ = width_;
        result.height_ = height_;
        result.stepTime_ = stepTime_;
        result.type_ = type_;
        if (((bitField0_ & 0x00000001) != 0)) {
          indices_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.indices_ = indices_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof commander.Command.NClip) {
          return mergeFrom((commander.Command.NClip)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(commander.Command.NClip other) {
        if (other == commander.Command.NClip.getDefaultInstance()) return this;
        if (!other.getData().isEmpty()) {
          data_ = other.data_;
          onChanged();
        }
        if (other.getX() != 0F) {
          setX(other.getX());
        }
        if (other.getY() != 0F) {
          setY(other.getY());
        }
        if (other.getWidth() != 0F) {
          setWidth(other.getWidth());
        }
        if (other.getHeight() != 0F) {
          setHeight(other.getHeight());
        }
        if (other.getStepTime() != 0F) {
          setStepTime(other.getStepTime());
        }
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (!other.indices_.isEmpty()) {
          if (indices_.isEmpty()) {
            indices_ = other.indices_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureIndicesIsMutable();
            indices_.addAll(other.indices_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                data_ = input.readStringRequireUtf8();

                break;
              } // case 10
              case 21: {
                x_ = input.readFloat();

                break;
              } // case 21
              case 29: {
                y_ = input.readFloat();

                break;
              } // case 29
              case 37: {
                width_ = input.readFloat();

                break;
              } // case 37
              case 45: {
                height_ = input.readFloat();

                break;
              } // case 45
              case 53: {
                stepTime_ = input.readFloat();

                break;
              } // case 53
              case 56: {
                type_ = input.readEnum();

                break;
              } // case 56
              case 64: {
                int v = input.readUInt32();
                ensureIndicesIsMutable();
                indices_.addInt(v);
                break;
              } // case 64
              case 66: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureIndicesIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  indices_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 66
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object data_ = "";
      /**
       * <code>string data = 1;</code>
       * @return The data.
       */
      public java.lang.String getData() {
        java.lang.Object ref = data_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          data_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string data = 1;</code>
       * @return The bytes for data.
       */
      public com.google.protobuf.ByteString
          getDataBytes() {
        java.lang.Object ref = data_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          data_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string data = 1;</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string data = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }
      /**
       * <code>string data = 1;</code>
       * @param value The bytes for data to set.
       * @return This builder for chaining.
       */
      public Builder setDataBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        data_ = value;
        onChanged();
        return this;
      }

      private float x_ ;
      /**
       * <code>float x = 2;</code>
       * @return The x.
       */
      @java.lang.Override
      public float getX() {
        return x_;
      }
      /**
       * <code>float x = 2;</code>
       * @param value The x to set.
       * @return This builder for chaining.
       */
      public Builder setX(float value) {
        
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float x = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearX() {
        
        x_ = 0F;
        onChanged();
        return this;
      }

      private float y_ ;
      /**
       * <code>float y = 3;</code>
       * @return The y.
       */
      @java.lang.Override
      public float getY() {
        return y_;
      }
      /**
       * <code>float y = 3;</code>
       * @param value The y to set.
       * @return This builder for chaining.
       */
      public Builder setY(float value) {
        
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float y = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearY() {
        
        y_ = 0F;
        onChanged();
        return this;
      }

      private float width_ ;
      /**
       * <code>float width = 4;</code>
       * @return The width.
       */
      @java.lang.Override
      public float getWidth() {
        return width_;
      }
      /**
       * <code>float width = 4;</code>
       * @param value The width to set.
       * @return This builder for chaining.
       */
      public Builder setWidth(float value) {
        
        width_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float width = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearWidth() {
        
        width_ = 0F;
        onChanged();
        return this;
      }

      private float height_ ;
      /**
       * <code>float height = 5;</code>
       * @return The height.
       */
      @java.lang.Override
      public float getHeight() {
        return height_;
      }
      /**
       * <code>float height = 5;</code>
       * @param value The height to set.
       * @return This builder for chaining.
       */
      public Builder setHeight(float value) {
        
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float height = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeight() {
        
        height_ = 0F;
        onChanged();
        return this;
      }

      private float stepTime_ ;
      /**
       * <code>float stepTime = 6;</code>
       * @return The stepTime.
       */
      @java.lang.Override
      public float getStepTime() {
        return stepTime_;
      }
      /**
       * <code>float stepTime = 6;</code>
       * @param value The stepTime to set.
       * @return This builder for chaining.
       */
      public Builder setStepTime(float value) {
        
        stepTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float stepTime = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearStepTime() {
        
        stepTime_ = 0F;
        onChanged();
        return this;
      }

      private int type_ = 0;
      /**
       * <code>.commander.NClipType type = 7;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.commander.NClipType type = 7;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.commander.NClipType type = 7;</code>
       * @return The type.
       */
      @java.lang.Override
      public commander.Command.NClipType getType() {
        @SuppressWarnings("deprecation")
        commander.Command.NClipType result = commander.Command.NClipType.valueOf(type_);
        return result == null ? commander.Command.NClipType.UNRECOGNIZED : result;
      }
      /**
       * <code>.commander.NClipType type = 7;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(commander.Command.NClipType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.commander.NClipType type = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList indices_ = emptyIntList();
      private void ensureIndicesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          indices_ = mutableCopy(indices_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated uint32 indices = 8;</code>
       * @return A list containing the indices.
       */
      public java.util.List<java.lang.Integer>
          getIndicesList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(indices_) : indices_;
      }
      /**
       * <code>repeated uint32 indices = 8;</code>
       * @return The count of indices.
       */
      public int getIndicesCount() {
        return indices_.size();
      }
      /**
       * <code>repeated uint32 indices = 8;</code>
       * @param index The index of the element to return.
       * @return The indices at the given index.
       */
      public int getIndices(int index) {
        return indices_.getInt(index);
      }
      /**
       * <code>repeated uint32 indices = 8;</code>
       * @param index The index to set the value at.
       * @param value The indices to set.
       * @return This builder for chaining.
       */
      public Builder setIndices(
          int index, int value) {
        ensureIndicesIsMutable();
        indices_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 indices = 8;</code>
       * @param value The indices to add.
       * @return This builder for chaining.
       */
      public Builder addIndices(int value) {
        ensureIndicesIsMutable();
        indices_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 indices = 8;</code>
       * @param values The indices to add.
       * @return This builder for chaining.
       */
      public Builder addAllIndices(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureIndicesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, indices_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 indices = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearIndices() {
        indices_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:commander.NClip)
    }

    // @@protoc_insertion_point(class_scope:commander.NClip)
    private static final commander.Command.NClip DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new commander.Command.NClip();
    }

    public static commander.Command.NClip getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NClip>
        PARSER = new com.google.protobuf.AbstractParser<NClip>() {
      @java.lang.Override
      public NClip parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<NClip> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NClip> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public commander.Command.NClip getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NBodyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:commander.NBody)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.commander.BodyType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <code>.commander.BodyType type = 1;</code>
     * @return The type.
     */
    commander.Command.BodyType getType();

    /**
     * <code>.commander.BodyShape shape = 2;</code>
     * @return The enum numeric value on the wire for shape.
     */
    int getShapeValue();
    /**
     * <code>.commander.BodyShape shape = 2;</code>
     * @return The shape.
     */
    commander.Command.BodyShape getShape();

    /**
     * <code>float x = 3;</code>
     * @return The x.
     */
    float getX();

    /**
     * <code>float y = 4;</code>
     * @return The y.
     */
    float getY();

    /**
     * <code>float width = 5;</code>
     * @return The width.
     */
    float getWidth();

    /**
     * <code>float height = 6;</code>
     * @return The height.
     */
    float getHeight();

    /**
     * <code>float restitution = 7;</code>
     * @return The restitution.
     */
    float getRestitution();

    /**
     * <code>float friction = 8;</code>
     * @return The friction.
     */
    float getFriction();

    /**
     * <code>float density = 9;</code>
     * @return The density.
     */
    float getDensity();

    /**
     * <code>float angle = 10;</code>
     * @return The angle.
     */
    float getAngle();

    /**
     * <code>bool isSensor = 11;</code>
     * @return The isSensor.
     */
    boolean getIsSensor();

    /**
     * <code>uint32 categoryBits = 12;</code>
     * @return The categoryBits.
     */
    int getCategoryBits();

    /**
     * <code>uint32 maskBits = 13;</code>
     * @return The maskBits.
     */
    int getMaskBits();

    /**
     * <code>bool fixedRotation = 14;</code>
     * @return The fixedRotation.
     */
    boolean getFixedRotation();

    /**
     * <code>bool trackable = 15;</code>
     * @return The trackable.
     */
    boolean getTrackable();

    /**
     * <code>bool contactReport = 16;</code>
     * @return The contactReport.
     */
    boolean getContactReport();

    /**
     * <code>repeated float floats = 17;</code>
     * @return A list containing the floats.
     */
    java.util.List<java.lang.Float> getFloatsList();
    /**
     * <code>repeated float floats = 17;</code>
     * @return The count of floats.
     */
    int getFloatsCount();
    /**
     * <code>repeated float floats = 17;</code>
     * @param index The index of the element to return.
     * @return The floats at the given index.
     */
    float getFloats(int index);

    /**
     * <code>bool passableBottom = 18;</code>
     * @return The passableBottom.
     */
    boolean getPassableBottom();
  }
  /**
   * Protobuf type {@code commander.NBody}
   */
  public static final class NBody extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:commander.NBody)
      NBodyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NBody.newBuilder() to construct.
    private NBody(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NBody() {
      type_ = 0;
      shape_ = 0;
      floats_ = emptyFloatList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new NBody();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return commander.Command.internal_static_commander_NBody_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return commander.Command.internal_static_commander_NBody_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              commander.Command.NBody.class, commander.Command.NBody.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>.commander.BodyType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.commander.BodyType type = 1;</code>
     * @return The type.
     */
    @java.lang.Override public commander.Command.BodyType getType() {
      @SuppressWarnings("deprecation")
      commander.Command.BodyType result = commander.Command.BodyType.valueOf(type_);
      return result == null ? commander.Command.BodyType.UNRECOGNIZED : result;
    }

    public static final int SHAPE_FIELD_NUMBER = 2;
    private int shape_;
    /**
     * <code>.commander.BodyShape shape = 2;</code>
     * @return The enum numeric value on the wire for shape.
     */
    @java.lang.Override public int getShapeValue() {
      return shape_;
    }
    /**
     * <code>.commander.BodyShape shape = 2;</code>
     * @return The shape.
     */
    @java.lang.Override public commander.Command.BodyShape getShape() {
      @SuppressWarnings("deprecation")
      commander.Command.BodyShape result = commander.Command.BodyShape.valueOf(shape_);
      return result == null ? commander.Command.BodyShape.UNRECOGNIZED : result;
    }

    public static final int X_FIELD_NUMBER = 3;
    private float x_;
    /**
     * <code>float x = 3;</code>
     * @return The x.
     */
    @java.lang.Override
    public float getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 4;
    private float y_;
    /**
     * <code>float y = 4;</code>
     * @return The y.
     */
    @java.lang.Override
    public float getY() {
      return y_;
    }

    public static final int WIDTH_FIELD_NUMBER = 5;
    private float width_;
    /**
     * <code>float width = 5;</code>
     * @return The width.
     */
    @java.lang.Override
    public float getWidth() {
      return width_;
    }

    public static final int HEIGHT_FIELD_NUMBER = 6;
    private float height_;
    /**
     * <code>float height = 6;</code>
     * @return The height.
     */
    @java.lang.Override
    public float getHeight() {
      return height_;
    }

    public static final int RESTITUTION_FIELD_NUMBER = 7;
    private float restitution_;
    /**
     * <code>float restitution = 7;</code>
     * @return The restitution.
     */
    @java.lang.Override
    public float getRestitution() {
      return restitution_;
    }

    public static final int FRICTION_FIELD_NUMBER = 8;
    private float friction_;
    /**
     * <code>float friction = 8;</code>
     * @return The friction.
     */
    @java.lang.Override
    public float getFriction() {
      return friction_;
    }

    public static final int DENSITY_FIELD_NUMBER = 9;
    private float density_;
    /**
     * <code>float density = 9;</code>
     * @return The density.
     */
    @java.lang.Override
    public float getDensity() {
      return density_;
    }

    public static final int ANGLE_FIELD_NUMBER = 10;
    private float angle_;
    /**
     * <code>float angle = 10;</code>
     * @return The angle.
     */
    @java.lang.Override
    public float getAngle() {
      return angle_;
    }

    public static final int ISSENSOR_FIELD_NUMBER = 11;
    private boolean isSensor_;
    /**
     * <code>bool isSensor = 11;</code>
     * @return The isSensor.
     */
    @java.lang.Override
    public boolean getIsSensor() {
      return isSensor_;
    }

    public static final int CATEGORYBITS_FIELD_NUMBER = 12;
    private int categoryBits_;
    /**
     * <code>uint32 categoryBits = 12;</code>
     * @return The categoryBits.
     */
    @java.lang.Override
    public int getCategoryBits() {
      return categoryBits_;
    }

    public static final int MASKBITS_FIELD_NUMBER = 13;
    private int maskBits_;
    /**
     * <code>uint32 maskBits = 13;</code>
     * @return The maskBits.
     */
    @java.lang.Override
    public int getMaskBits() {
      return maskBits_;
    }

    public static final int FIXEDROTATION_FIELD_NUMBER = 14;
    private boolean fixedRotation_;
    /**
     * <code>bool fixedRotation = 14;</code>
     * @return The fixedRotation.
     */
    @java.lang.Override
    public boolean getFixedRotation() {
      return fixedRotation_;
    }

    public static final int TRACKABLE_FIELD_NUMBER = 15;
    private boolean trackable_;
    /**
     * <code>bool trackable = 15;</code>
     * @return The trackable.
     */
    @java.lang.Override
    public boolean getTrackable() {
      return trackable_;
    }

    public static final int CONTACTREPORT_FIELD_NUMBER = 16;
    private boolean contactReport_;
    /**
     * <code>bool contactReport = 16;</code>
     * @return The contactReport.
     */
    @java.lang.Override
    public boolean getContactReport() {
      return contactReport_;
    }

    public static final int FLOATS_FIELD_NUMBER = 17;
    private com.google.protobuf.Internal.FloatList floats_;
    /**
     * <code>repeated float floats = 17;</code>
     * @return A list containing the floats.
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getFloatsList() {
      return floats_;
    }
    /**
     * <code>repeated float floats = 17;</code>
     * @return The count of floats.
     */
    public int getFloatsCount() {
      return floats_.size();
    }
    /**
     * <code>repeated float floats = 17;</code>
     * @param index The index of the element to return.
     * @return The floats at the given index.
     */
    public float getFloats(int index) {
      return floats_.getFloat(index);
    }
    private int floatsMemoizedSerializedSize = -1;

    public static final int PASSABLEBOTTOM_FIELD_NUMBER = 18;
    private boolean passableBottom_;
    /**
     * <code>bool passableBottom = 18;</code>
     * @return The passableBottom.
     */
    @java.lang.Override
    public boolean getPassableBottom() {
      return passableBottom_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (type_ != commander.Command.BodyType.staticBody.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (shape_ != commander.Command.BodyShape.rectangle.getNumber()) {
        output.writeEnum(2, shape_);
      }
      if (java.lang.Float.floatToRawIntBits(x_) != 0) {
        output.writeFloat(3, x_);
      }
      if (java.lang.Float.floatToRawIntBits(y_) != 0) {
        output.writeFloat(4, y_);
      }
      if (java.lang.Float.floatToRawIntBits(width_) != 0) {
        output.writeFloat(5, width_);
      }
      if (java.lang.Float.floatToRawIntBits(height_) != 0) {
        output.writeFloat(6, height_);
      }
      if (java.lang.Float.floatToRawIntBits(restitution_) != 0) {
        output.writeFloat(7, restitution_);
      }
      if (java.lang.Float.floatToRawIntBits(friction_) != 0) {
        output.writeFloat(8, friction_);
      }
      if (java.lang.Float.floatToRawIntBits(density_) != 0) {
        output.writeFloat(9, density_);
      }
      if (java.lang.Float.floatToRawIntBits(angle_) != 0) {
        output.writeFloat(10, angle_);
      }
      if (isSensor_ != false) {
        output.writeBool(11, isSensor_);
      }
      if (categoryBits_ != 0) {
        output.writeUInt32(12, categoryBits_);
      }
      if (maskBits_ != 0) {
        output.writeUInt32(13, maskBits_);
      }
      if (fixedRotation_ != false) {
        output.writeBool(14, fixedRotation_);
      }
      if (trackable_ != false) {
        output.writeBool(15, trackable_);
      }
      if (contactReport_ != false) {
        output.writeBool(16, contactReport_);
      }
      if (getFloatsList().size() > 0) {
        output.writeUInt32NoTag(138);
        output.writeUInt32NoTag(floatsMemoizedSerializedSize);
      }
      for (int i = 0; i < floats_.size(); i++) {
        output.writeFloatNoTag(floats_.getFloat(i));
      }
      if (passableBottom_ != false) {
        output.writeBool(18, passableBottom_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != commander.Command.BodyType.staticBody.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (shape_ != commander.Command.BodyShape.rectangle.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, shape_);
      }
      if (java.lang.Float.floatToRawIntBits(x_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, x_);
      }
      if (java.lang.Float.floatToRawIntBits(y_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, y_);
      }
      if (java.lang.Float.floatToRawIntBits(width_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, width_);
      }
      if (java.lang.Float.floatToRawIntBits(height_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, height_);
      }
      if (java.lang.Float.floatToRawIntBits(restitution_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, restitution_);
      }
      if (java.lang.Float.floatToRawIntBits(friction_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, friction_);
      }
      if (java.lang.Float.floatToRawIntBits(density_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, density_);
      }
      if (java.lang.Float.floatToRawIntBits(angle_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, angle_);
      }
      if (isSensor_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, isSensor_);
      }
      if (categoryBits_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, categoryBits_);
      }
      if (maskBits_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, maskBits_);
      }
      if (fixedRotation_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(14, fixedRotation_);
      }
      if (trackable_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(15, trackable_);
      }
      if (contactReport_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(16, contactReport_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getFloatsList().size();
        size += dataSize;
        if (!getFloatsList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        floatsMemoizedSerializedSize = dataSize;
      }
      if (passableBottom_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(18, passableBottom_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof commander.Command.NBody)) {
        return super.equals(obj);
      }
      commander.Command.NBody other = (commander.Command.NBody) obj;

      if (type_ != other.type_) return false;
      if (shape_ != other.shape_) return false;
      if (java.lang.Float.floatToIntBits(getX())
          != java.lang.Float.floatToIntBits(
              other.getX())) return false;
      if (java.lang.Float.floatToIntBits(getY())
          != java.lang.Float.floatToIntBits(
              other.getY())) return false;
      if (java.lang.Float.floatToIntBits(getWidth())
          != java.lang.Float.floatToIntBits(
              other.getWidth())) return false;
      if (java.lang.Float.floatToIntBits(getHeight())
          != java.lang.Float.floatToIntBits(
              other.getHeight())) return false;
      if (java.lang.Float.floatToIntBits(getRestitution())
          != java.lang.Float.floatToIntBits(
              other.getRestitution())) return false;
      if (java.lang.Float.floatToIntBits(getFriction())
          != java.lang.Float.floatToIntBits(
              other.getFriction())) return false;
      if (java.lang.Float.floatToIntBits(getDensity())
          != java.lang.Float.floatToIntBits(
              other.getDensity())) return false;
      if (java.lang.Float.floatToIntBits(getAngle())
          != java.lang.Float.floatToIntBits(
              other.getAngle())) return false;
      if (getIsSensor()
          != other.getIsSensor()) return false;
      if (getCategoryBits()
          != other.getCategoryBits()) return false;
      if (getMaskBits()
          != other.getMaskBits()) return false;
      if (getFixedRotation()
          != other.getFixedRotation()) return false;
      if (getTrackable()
          != other.getTrackable()) return false;
      if (getContactReport()
          != other.getContactReport()) return false;
      if (!getFloatsList()
          .equals(other.getFloatsList())) return false;
      if (getPassableBottom()
          != other.getPassableBottom()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + SHAPE_FIELD_NUMBER;
      hash = (53 * hash) + shape_;
      hash = (37 * hash) + X_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getX());
      hash = (37 * hash) + Y_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getY());
      hash = (37 * hash) + WIDTH_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getWidth());
      hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getHeight());
      hash = (37 * hash) + RESTITUTION_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getRestitution());
      hash = (37 * hash) + FRICTION_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getFriction());
      hash = (37 * hash) + DENSITY_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getDensity());
      hash = (37 * hash) + ANGLE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getAngle());
      hash = (37 * hash) + ISSENSOR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsSensor());
      hash = (37 * hash) + CATEGORYBITS_FIELD_NUMBER;
      hash = (53 * hash) + getCategoryBits();
      hash = (37 * hash) + MASKBITS_FIELD_NUMBER;
      hash = (53 * hash) + getMaskBits();
      hash = (37 * hash) + FIXEDROTATION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getFixedRotation());
      hash = (37 * hash) + TRACKABLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getTrackable());
      hash = (37 * hash) + CONTACTREPORT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getContactReport());
      if (getFloatsCount() > 0) {
        hash = (37 * hash) + FLOATS_FIELD_NUMBER;
        hash = (53 * hash) + getFloatsList().hashCode();
      }
      hash = (37 * hash) + PASSABLEBOTTOM_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getPassableBottom());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static commander.Command.NBody parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static commander.Command.NBody parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static commander.Command.NBody parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static commander.Command.NBody parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static commander.Command.NBody parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static commander.Command.NBody parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static commander.Command.NBody parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static commander.Command.NBody parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static commander.Command.NBody parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static commander.Command.NBody parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static commander.Command.NBody parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static commander.Command.NBody parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(commander.Command.NBody prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code commander.NBody}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:commander.NBody)
        commander.Command.NBodyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return commander.Command.internal_static_commander_NBody_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return commander.Command.internal_static_commander_NBody_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                commander.Command.NBody.class, commander.Command.NBody.Builder.class);
      }

      // Construct using commander.Command.NBody.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        shape_ = 0;

        x_ = 0F;

        y_ = 0F;

        width_ = 0F;

        height_ = 0F;

        restitution_ = 0F;

        friction_ = 0F;

        density_ = 0F;

        angle_ = 0F;

        isSensor_ = false;

        categoryBits_ = 0;

        maskBits_ = 0;

        fixedRotation_ = false;

        trackable_ = false;

        contactReport_ = false;

        floats_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000001);
        passableBottom_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return commander.Command.internal_static_commander_NBody_descriptor;
      }

      @java.lang.Override
      public commander.Command.NBody getDefaultInstanceForType() {
        return commander.Command.NBody.getDefaultInstance();
      }

      @java.lang.Override
      public commander.Command.NBody build() {
        commander.Command.NBody result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public commander.Command.NBody buildPartial() {
        commander.Command.NBody result = new commander.Command.NBody(this);
        int from_bitField0_ = bitField0_;
        result.type_ = type_;
        result.shape_ = shape_;
        result.x_ = x_;
        result.y_ = y_;
        result.width_ = width_;
        result.height_ = height_;
        result.restitution_ = restitution_;
        result.friction_ = friction_;
        result.density_ = density_;
        result.angle_ = angle_;
        result.isSensor_ = isSensor_;
        result.categoryBits_ = categoryBits_;
        result.maskBits_ = maskBits_;
        result.fixedRotation_ = fixedRotation_;
        result.trackable_ = trackable_;
        result.contactReport_ = contactReport_;
        if (((bitField0_ & 0x00000001) != 0)) {
          floats_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.floats_ = floats_;
        result.passableBottom_ = passableBottom_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof commander.Command.NBody) {
          return mergeFrom((commander.Command.NBody)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(commander.Command.NBody other) {
        if (other == commander.Command.NBody.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.shape_ != 0) {
          setShapeValue(other.getShapeValue());
        }
        if (other.getX() != 0F) {
          setX(other.getX());
        }
        if (other.getY() != 0F) {
          setY(other.getY());
        }
        if (other.getWidth() != 0F) {
          setWidth(other.getWidth());
        }
        if (other.getHeight() != 0F) {
          setHeight(other.getHeight());
        }
        if (other.getRestitution() != 0F) {
          setRestitution(other.getRestitution());
        }
        if (other.getFriction() != 0F) {
          setFriction(other.getFriction());
        }
        if (other.getDensity() != 0F) {
          setDensity(other.getDensity());
        }
        if (other.getAngle() != 0F) {
          setAngle(other.getAngle());
        }
        if (other.getIsSensor() != false) {
          setIsSensor(other.getIsSensor());
        }
        if (other.getCategoryBits() != 0) {
          setCategoryBits(other.getCategoryBits());
        }
        if (other.getMaskBits() != 0) {
          setMaskBits(other.getMaskBits());
        }
        if (other.getFixedRotation() != false) {
          setFixedRotation(other.getFixedRotation());
        }
        if (other.getTrackable() != false) {
          setTrackable(other.getTrackable());
        }
        if (other.getContactReport() != false) {
          setContactReport(other.getContactReport());
        }
        if (!other.floats_.isEmpty()) {
          if (floats_.isEmpty()) {
            floats_ = other.floats_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureFloatsIsMutable();
            floats_.addAll(other.floats_);
          }
          onChanged();
        }
        if (other.getPassableBottom() != false) {
          setPassableBottom(other.getPassableBottom());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                type_ = input.readEnum();

                break;
              } // case 8
              case 16: {
                shape_ = input.readEnum();

                break;
              } // case 16
              case 29: {
                x_ = input.readFloat();

                break;
              } // case 29
              case 37: {
                y_ = input.readFloat();

                break;
              } // case 37
              case 45: {
                width_ = input.readFloat();

                break;
              } // case 45
              case 53: {
                height_ = input.readFloat();

                break;
              } // case 53
              case 61: {
                restitution_ = input.readFloat();

                break;
              } // case 61
              case 69: {
                friction_ = input.readFloat();

                break;
              } // case 69
              case 77: {
                density_ = input.readFloat();

                break;
              } // case 77
              case 85: {
                angle_ = input.readFloat();

                break;
              } // case 85
              case 88: {
                isSensor_ = input.readBool();

                break;
              } // case 88
              case 96: {
                categoryBits_ = input.readUInt32();

                break;
              } // case 96
              case 104: {
                maskBits_ = input.readUInt32();

                break;
              } // case 104
              case 112: {
                fixedRotation_ = input.readBool();

                break;
              } // case 112
              case 120: {
                trackable_ = input.readBool();

                break;
              } // case 120
              case 128: {
                contactReport_ = input.readBool();

                break;
              } // case 128
              case 141: {
                float v = input.readFloat();
                ensureFloatsIsMutable();
                floats_.addFloat(v);
                break;
              } // case 141
              case 138: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureFloatsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  floats_.addFloat(input.readFloat());
                }
                input.popLimit(limit);
                break;
              } // case 138
              case 144: {
                passableBottom_ = input.readBool();

                break;
              } // case 144
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int type_ = 0;
      /**
       * <code>.commander.BodyType type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.commander.BodyType type = 1;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.commander.BodyType type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public commander.Command.BodyType getType() {
        @SuppressWarnings("deprecation")
        commander.Command.BodyType result = commander.Command.BodyType.valueOf(type_);
        return result == null ? commander.Command.BodyType.UNRECOGNIZED : result;
      }
      /**
       * <code>.commander.BodyType type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(commander.Command.BodyType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.commander.BodyType type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private int shape_ = 0;
      /**
       * <code>.commander.BodyShape shape = 2;</code>
       * @return The enum numeric value on the wire for shape.
       */
      @java.lang.Override public int getShapeValue() {
        return shape_;
      }
      /**
       * <code>.commander.BodyShape shape = 2;</code>
       * @param value The enum numeric value on the wire for shape to set.
       * @return This builder for chaining.
       */
      public Builder setShapeValue(int value) {
        
        shape_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.commander.BodyShape shape = 2;</code>
       * @return The shape.
       */
      @java.lang.Override
      public commander.Command.BodyShape getShape() {
        @SuppressWarnings("deprecation")
        commander.Command.BodyShape result = commander.Command.BodyShape.valueOf(shape_);
        return result == null ? commander.Command.BodyShape.UNRECOGNIZED : result;
      }
      /**
       * <code>.commander.BodyShape shape = 2;</code>
       * @param value The shape to set.
       * @return This builder for chaining.
       */
      public Builder setShape(commander.Command.BodyShape value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        shape_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.commander.BodyShape shape = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearShape() {
        
        shape_ = 0;
        onChanged();
        return this;
      }

      private float x_ ;
      /**
       * <code>float x = 3;</code>
       * @return The x.
       */
      @java.lang.Override
      public float getX() {
        return x_;
      }
      /**
       * <code>float x = 3;</code>
       * @param value The x to set.
       * @return This builder for chaining.
       */
      public Builder setX(float value) {
        
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float x = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearX() {
        
        x_ = 0F;
        onChanged();
        return this;
      }

      private float y_ ;
      /**
       * <code>float y = 4;</code>
       * @return The y.
       */
      @java.lang.Override
      public float getY() {
        return y_;
      }
      /**
       * <code>float y = 4;</code>
       * @param value The y to set.
       * @return This builder for chaining.
       */
      public Builder setY(float value) {
        
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float y = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearY() {
        
        y_ = 0F;
        onChanged();
        return this;
      }

      private float width_ ;
      /**
       * <code>float width = 5;</code>
       * @return The width.
       */
      @java.lang.Override
      public float getWidth() {
        return width_;
      }
      /**
       * <code>float width = 5;</code>
       * @param value The width to set.
       * @return This builder for chaining.
       */
      public Builder setWidth(float value) {
        
        width_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float width = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearWidth() {
        
        width_ = 0F;
        onChanged();
        return this;
      }

      private float height_ ;
      /**
       * <code>float height = 6;</code>
       * @return The height.
       */
      @java.lang.Override
      public float getHeight() {
        return height_;
      }
      /**
       * <code>float height = 6;</code>
       * @param value The height to set.
       * @return This builder for chaining.
       */
      public Builder setHeight(float value) {
        
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float height = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeight() {
        
        height_ = 0F;
        onChanged();
        return this;
      }

      private float restitution_ ;
      /**
       * <code>float restitution = 7;</code>
       * @return The restitution.
       */
      @java.lang.Override
      public float getRestitution() {
        return restitution_;
      }
      /**
       * <code>float restitution = 7;</code>
       * @param value The restitution to set.
       * @return This builder for chaining.
       */
      public Builder setRestitution(float value) {
        
        restitution_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float restitution = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearRestitution() {
        
        restitution_ = 0F;
        onChanged();
        return this;
      }

      private float friction_ ;
      /**
       * <code>float friction = 8;</code>
       * @return The friction.
       */
      @java.lang.Override
      public float getFriction() {
        return friction_;
      }
      /**
       * <code>float friction = 8;</code>
       * @param value The friction to set.
       * @return This builder for chaining.
       */
      public Builder setFriction(float value) {
        
        friction_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float friction = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearFriction() {
        
        friction_ = 0F;
        onChanged();
        return this;
      }

      private float density_ ;
      /**
       * <code>float density = 9;</code>
       * @return The density.
       */
      @java.lang.Override
      public float getDensity() {
        return density_;
      }
      /**
       * <code>float density = 9;</code>
       * @param value The density to set.
       * @return This builder for chaining.
       */
      public Builder setDensity(float value) {
        
        density_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float density = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearDensity() {
        
        density_ = 0F;
        onChanged();
        return this;
      }

      private float angle_ ;
      /**
       * <code>float angle = 10;</code>
       * @return The angle.
       */
      @java.lang.Override
      public float getAngle() {
        return angle_;
      }
      /**
       * <code>float angle = 10;</code>
       * @param value The angle to set.
       * @return This builder for chaining.
       */
      public Builder setAngle(float value) {
        
        angle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float angle = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearAngle() {
        
        angle_ = 0F;
        onChanged();
        return this;
      }

      private boolean isSensor_ ;
      /**
       * <code>bool isSensor = 11;</code>
       * @return The isSensor.
       */
      @java.lang.Override
      public boolean getIsSensor() {
        return isSensor_;
      }
      /**
       * <code>bool isSensor = 11;</code>
       * @param value The isSensor to set.
       * @return This builder for chaining.
       */
      public Builder setIsSensor(boolean value) {
        
        isSensor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool isSensor = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsSensor() {
        
        isSensor_ = false;
        onChanged();
        return this;
      }

      private int categoryBits_ ;
      /**
       * <code>uint32 categoryBits = 12;</code>
       * @return The categoryBits.
       */
      @java.lang.Override
      public int getCategoryBits() {
        return categoryBits_;
      }
      /**
       * <code>uint32 categoryBits = 12;</code>
       * @param value The categoryBits to set.
       * @return This builder for chaining.
       */
      public Builder setCategoryBits(int value) {
        
        categoryBits_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 categoryBits = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearCategoryBits() {
        
        categoryBits_ = 0;
        onChanged();
        return this;
      }

      private int maskBits_ ;
      /**
       * <code>uint32 maskBits = 13;</code>
       * @return The maskBits.
       */
      @java.lang.Override
      public int getMaskBits() {
        return maskBits_;
      }
      /**
       * <code>uint32 maskBits = 13;</code>
       * @param value The maskBits to set.
       * @return This builder for chaining.
       */
      public Builder setMaskBits(int value) {
        
        maskBits_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 maskBits = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaskBits() {
        
        maskBits_ = 0;
        onChanged();
        return this;
      }

      private boolean fixedRotation_ ;
      /**
       * <code>bool fixedRotation = 14;</code>
       * @return The fixedRotation.
       */
      @java.lang.Override
      public boolean getFixedRotation() {
        return fixedRotation_;
      }
      /**
       * <code>bool fixedRotation = 14;</code>
       * @param value The fixedRotation to set.
       * @return This builder for chaining.
       */
      public Builder setFixedRotation(boolean value) {
        
        fixedRotation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool fixedRotation = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearFixedRotation() {
        
        fixedRotation_ = false;
        onChanged();
        return this;
      }

      private boolean trackable_ ;
      /**
       * <code>bool trackable = 15;</code>
       * @return The trackable.
       */
      @java.lang.Override
      public boolean getTrackable() {
        return trackable_;
      }
      /**
       * <code>bool trackable = 15;</code>
       * @param value The trackable to set.
       * @return This builder for chaining.
       */
      public Builder setTrackable(boolean value) {
        
        trackable_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool trackable = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearTrackable() {
        
        trackable_ = false;
        onChanged();
        return this;
      }

      private boolean contactReport_ ;
      /**
       * <code>bool contactReport = 16;</code>
       * @return The contactReport.
       */
      @java.lang.Override
      public boolean getContactReport() {
        return contactReport_;
      }
      /**
       * <code>bool contactReport = 16;</code>
       * @param value The contactReport to set.
       * @return This builder for chaining.
       */
      public Builder setContactReport(boolean value) {
        
        contactReport_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool contactReport = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearContactReport() {
        
        contactReport_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.FloatList floats_ = emptyFloatList();
      private void ensureFloatsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          floats_ = mutableCopy(floats_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated float floats = 17;</code>
       * @return A list containing the floats.
       */
      public java.util.List<java.lang.Float>
          getFloatsList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(floats_) : floats_;
      }
      /**
       * <code>repeated float floats = 17;</code>
       * @return The count of floats.
       */
      public int getFloatsCount() {
        return floats_.size();
      }
      /**
       * <code>repeated float floats = 17;</code>
       * @param index The index of the element to return.
       * @return The floats at the given index.
       */
      public float getFloats(int index) {
        return floats_.getFloat(index);
      }
      /**
       * <code>repeated float floats = 17;</code>
       * @param index The index to set the value at.
       * @param value The floats to set.
       * @return This builder for chaining.
       */
      public Builder setFloats(
          int index, float value) {
        ensureFloatsIsMutable();
        floats_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float floats = 17;</code>
       * @param value The floats to add.
       * @return This builder for chaining.
       */
      public Builder addFloats(float value) {
        ensureFloatsIsMutable();
        floats_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float floats = 17;</code>
       * @param values The floats to add.
       * @return This builder for chaining.
       */
      public Builder addAllFloats(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureFloatsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, floats_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float floats = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearFloats() {
        floats_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private boolean passableBottom_ ;
      /**
       * <code>bool passableBottom = 18;</code>
       * @return The passableBottom.
       */
      @java.lang.Override
      public boolean getPassableBottom() {
        return passableBottom_;
      }
      /**
       * <code>bool passableBottom = 18;</code>
       * @param value The passableBottom to set.
       * @return This builder for chaining.
       */
      public Builder setPassableBottom(boolean value) {
        
        passableBottom_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool passableBottom = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearPassableBottom() {
        
        passableBottom_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:commander.NBody)
    }

    // @@protoc_insertion_point(class_scope:commander.NBody)
    private static final commander.Command.NBody DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new commander.Command.NBody();
    }

    public static commander.Command.NBody getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NBody>
        PARSER = new com.google.protobuf.AbstractParser<NBody>() {
      @java.lang.Override
      public NBody parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<NBody> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NBody> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public commander.Command.NBody getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_commander_QueryInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_commander_QueryInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_commander_NEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_commander_NEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_commander_NStageInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_commander_NStageInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_commander_Cmd_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_commander_Cmd_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_commander_NObject_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_commander_NObject_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_commander_NVisual_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_commander_NVisual_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_commander_NClip_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_commander_NClip_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_commander_NBody_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_commander_NBody_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rcommand.proto\022\tcommander\"l\n\tQueryInfo\022" +
      "\013\n\003qid\030\001 \001(\r\022\n\n\002ax\030\002 \001(\002\022\n\n\002ay\030\003 \001(\002\022\n\n\002" +
      "bx\030\004 \001(\002\022\n\n\002by\030\005 \001(\002\022\013\n\003max\030\006 \001(\r\022\025\n\rtra" +
      "ckableOnly\030\007 \001(\010\"7\n\006NEvent\022\014\n\004ints\030\001 \003(\005" +
      "\022\016\n\006floats\030\002 \003(\002\022\017\n\007strings\030\003 \003(\t\"\215\003\n\nNS" +
      "tageInfo\022\n\n\002sn\030\001 \001(\r\022\022\n\nbackground\030\002 \001(\t" +
      "\022\020\n\010gravityX\030\003 \001(\002\022\020\n\010gravityY\030\004 \001(\002\022\r\n\005" +
      "width\030\005 \001(\002\022\016\n\006height\030\006 \001(\002\022\r\n\005debug\030\007 \001" +
      "(\010\022=\n\024joystickDirectionals\030\010 \001(\0162\037.comma" +
      "nder.JoystickDirectionals\022\031\n\021joystickPre" +
      "cision\030\t \001(\r\022\'\n\007button1\030\n \001(\0162\026.commande" +
      "r.TouchMotion\022\'\n\007button2\030\013 \001(\0162\026.command" +
      "er.TouchMotion\022#\n\003tap\030\014 \001(\0162\026.commander." +
      "TouchMotion\022\032\n\022tapMinMoveDistance\030\r \001(\002\022" +
      " \n\030distanceTrackingInternal\030\016 \001(\002\"O\n\003Cmd" +
      "\022\n\n\002sn\030\001 \001(\r\022\014\n\004ints\030\002 \003(\005\022\016\n\006floats\030\003 \003" +
      "(\002\022\017\n\007strings\030\004 \003(\t\022\r\n\005bytes\030\005 \003(\014\"\236\001\n\007N" +
      "Object\022\n\n\002sn\030\001 \001(\r\022\n\n\002id\030\002 \001(\005\022#\n\004body\030\003" +
      " \001(\0132\020.commander.NBodyH\000\210\001\001\022\'\n\006visual\030\004 " +
      "\001(\0132\022.commander.NVisualH\001\210\001\001\022\013\n\003tid\030\005 \001(" +
      "\r\022\014\n\004info\030\006 \001(\tB\007\n\005_bodyB\t\n\007_visual\"\304\001\n\007" +
      "NVisual\022\020\n\010priority\030\001 \001(\005\022\017\n\007current\030\002 \001" +
      "(\005\022\t\n\001x\030\003 \001(\002\022\t\n\001y\030\004 \001(\002\022\r\n\005width\030\005 \001(\002\022" +
      "\016\n\006height\030\006 \001(\002\022\016\n\006scaleX\030\007 \001(\002\022\016\n\006scale" +
      "Y\030\010 \001(\002\022\017\n\007anchorX\030\t \001(\002\022\017\n\007anchorY\030\n \001(" +
      "\002\022\037\n\005clips\030\013 \003(\0132\020.commander.NClip\"\221\001\n\005N" +
      "Clip\022\014\n\004data\030\001 \001(\t\022\t\n\001x\030\002 \001(\002\022\t\n\001y\030\003 \001(\002" +
      "\022\r\n\005width\030\004 \001(\002\022\016\n\006height\030\005 \001(\002\022\020\n\010stepT" +
      "ime\030\006 \001(\002\022\"\n\004type\030\007 \001(\0162\024.commander.NCli" +
      "pType\022\017\n\007indices\030\010 \003(\r\"\356\002\n\005NBody\022!\n\004type" +
      "\030\001 \001(\0162\023.commander.BodyType\022#\n\005shape\030\002 \001" +
      "(\0162\024.commander.BodyShape\022\t\n\001x\030\003 \001(\002\022\t\n\001y" +
      "\030\004 \001(\002\022\r\n\005width\030\005 \001(\002\022\016\n\006height\030\006 \001(\002\022\023\n" +
      "\013restitution\030\007 \001(\002\022\020\n\010friction\030\010 \001(\002\022\017\n\007" +
      "density\030\t \001(\002\022\r\n\005angle\030\n \001(\002\022\020\n\010isSensor" +
      "\030\013 \001(\010\022\024\n\014categoryBits\030\014 \001(\r\022\020\n\010maskBits" +
      "\030\r \001(\r\022\025\n\rfixedRotation\030\016 \001(\010\022\021\n\ttrackab" +
      "le\030\017 \001(\010\022\025\n\rcontactReport\030\020 \001(\010\022\016\n\006float" +
      "s\030\021 \003(\002\022\026\n\016passableBottom\030\022 \001(\010*\302\001\n\004Head" +
      "\022\007\n\003cmd\020\000\022\013\n\005stage\020\200\376\003\022\013\n\005query\020\204\376\003\022\014\n\006o" +
      "bject\020\206\376\003\022\r\n\007contact\020\360\341\003\022\013\n\005event\020\361\341\003\022\t\n" +
      "\003key\020\362\341\003\022\t\n\003ack\020\363\341\003\022\021\n\013directional\020\364\341\003\022\014" +
      "\n\006button\020\365\341\003\022\t\n\003tap\020\366\341\003\022\021\n\013queryresult\020\367" +
      "\341\003\022\013\n\005error\020\370\341\003\022\013\n\005relay\020\371\341\003*V\n\tBodyShap" +
      "e\022\r\n\trectangle\020\000\022\t\n\005actor\020\001\022\n\n\006circle\020\002\022" +
      "\014\n\010triangle\020\003\022\010\n\004edge\020\004\022\013\n\007polygon\020\005*>\n\010" +
      "BodyType\022\016\n\nstaticBody\020\000\022\021\n\rkinematicBod" +
      "y\020\001\022\017\n\013dynamicBody\020\002*\254\001\n\027JoystickMoveDir" +
      "ectional\022\013\n\007MOVE_UP\020\000\022\020\n\014MOVE_UP_LEFT\020\001\022" +
      "\021\n\rMOVE_UP_RIGHT\020\002\022\016\n\nMOVE_RIGHT\020\003\022\r\n\tMO" +
      "VE_DOWN\020\004\022\023\n\017MOVE_DOWN_RIGHT\020\005\022\022\n\016MOVE_D" +
      "OWN_LEFT\020\006\022\r\n\tMOVE_LEFT\020\007\022\010\n\004IDLE\020\010*I\n\013T" +
      "ouchMotion\022\010\n\004NONE\020\000\022\010\n\004DOWN\020\001\022\010\n\004MOVE\020\002" +
      "\022\006\n\002UP\020\004\022\013\n\007DOWN_UP\020\005\022\007\n\003ALL\020\007*S\n\014TouchI" +
      "nputId\022\021\n\rjoystickInput\020\000\022\020\n\014button1Inpu" +
      "t\020\001\022\020\n\014button2Input\020\002\022\014\n\010tapInput\020\003*G\n\024J" +
      "oystickDirectionals\022\010\n\004none\020\000\022\007\n\003all\020\001\022\016" +
      "\n\nhorizontal\020\002\022\014\n\010vertical\020\003*3\n\tNClipTyp" +
      "e\022\010\n\004loop\020\000\022\010\n\004once\020\001\022\t\n\005tiles\020\002\022\007\n\003svg\020" +
      "\003b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_commander_QueryInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_commander_QueryInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_commander_QueryInfo_descriptor,
        new java.lang.String[] { "Qid", "Ax", "Ay", "Bx", "By", "Max", "TrackableOnly", });
    internal_static_commander_NEvent_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_commander_NEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_commander_NEvent_descriptor,
        new java.lang.String[] { "Ints", "Floats", "Strings", });
    internal_static_commander_NStageInfo_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_commander_NStageInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_commander_NStageInfo_descriptor,
        new java.lang.String[] { "Sn", "Background", "GravityX", "GravityY", "Width", "Height", "Debug", "JoystickDirectionals", "JoystickPrecision", "Button1", "Button2", "Tap", "TapMinMoveDistance", "DistanceTrackingInternal", });
    internal_static_commander_Cmd_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_commander_Cmd_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_commander_Cmd_descriptor,
        new java.lang.String[] { "Sn", "Ints", "Floats", "Strings", "Bytes", });
    internal_static_commander_NObject_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_commander_NObject_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_commander_NObject_descriptor,
        new java.lang.String[] { "Sn", "Id", "Body", "Visual", "Tid", "Info", "Body", "Visual", });
    internal_static_commander_NVisual_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_commander_NVisual_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_commander_NVisual_descriptor,
        new java.lang.String[] { "Priority", "Current", "X", "Y", "Width", "Height", "ScaleX", "ScaleY", "AnchorX", "AnchorY", "Clips", });
    internal_static_commander_NClip_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_commander_NClip_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_commander_NClip_descriptor,
        new java.lang.String[] { "Data", "X", "Y", "Width", "Height", "StepTime", "Type", "Indices", });
    internal_static_commander_NBody_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_commander_NBody_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_commander_NBody_descriptor,
        new java.lang.String[] { "Type", "Shape", "X", "Y", "Width", "Height", "Restitution", "Friction", "Density", "Angle", "IsSensor", "CategoryBits", "MaskBits", "FixedRotation", "Trackable", "ContactReport", "Floats", "PassableBottom", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
